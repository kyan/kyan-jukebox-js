// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CurrentTrack render album renders and average vote that was < 50 1`] = `
<div
  className="track-rating-container"
>
  <ComponentEnhancer(undefined)
    activeDotStyle={Object {}}
    className=""
    disabled={false}
    dotStyle={Object {}}
    dots={true}
    handle={[Function]}
    handleStyle={
      Object {
        "backgroundColor": "#21ba45",
        "borderColor": "#21ba45",
      }
    }
    included={false}
    marks={
      Object {
        "0": Object {
          "label": <Icon
            as="i"
            color="red"
            name="thumbs down"
          />,
          "style": Object {
            "color": "red",
          },
        },
        "100": Object {
          "label": <Icon
            as="i"
            color="green"
            name="thumbs up"
          />,
          "style": Object {
            "color": "green",
          },
        },
        "50": <Icon
          as="i"
          name="handshake"
        />,
      }
    }
    max={100}
    min={0}
    onAfterChange={[Function]}
    onBeforeChange={[Function]}
    onChange={[Function]}
    prefixCls="rc-slider"
    railStyle={Object {}}
    reverse={false}
    step={10}
    trackStyle={
      Array [
        Object {},
      ]
    }
    value={80}
    vertical={false}
  >
    <div
      className="rc-slider rc-slider-with-marks"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      onTouchStart={[Function]}
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <Track
        className="rc-slider-track"
        included={false}
        length={80}
        offset={0}
        reverse={false}
        style={Object {}}
        vertical={false}
      />
      <Steps
        activeDotStyle={Object {}}
        dotStyle={Object {}}
        dots={true}
        included={false}
        lowerBound={0}
        marks={
          Object {
            "0": Object {
              "label": <Icon
                as="i"
                color="red"
                name="thumbs down"
              />,
              "style": Object {
                "color": "red",
              },
            },
            "100": Object {
              "label": <Icon
                as="i"
                color="green"
                name="thumbs up"
              />,
              "style": Object {
                "color": "green",
              },
            },
            "50": <Icon
              as="i"
              name="handshake"
            />,
          }
        }
        max={100}
        min={0}
        prefixCls="rc-slider"
        reverse={false}
        step={10}
        upperBound={80}
        vertical={false}
      >
        <div
          className="rc-slider-step"
        >
          <span
            className="rc-slider-dot"
            key="0"
            style={
              Object {
                "left": "0%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="50"
            style={
              Object {
                "left": "50%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="100"
            style={
              Object {
                "left": "100%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="10"
            style={
              Object {
                "left": "10%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="20"
            style={
              Object {
                "left": "20%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="30"
            style={
              Object {
                "left": "30%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="40"
            style={
              Object {
                "left": "40%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="60"
            style={
              Object {
                "left": "60%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="70"
            style={
              Object {
                "left": "70%",
              }
            }
          />
          <span
            className="rc-slider-dot rc-slider-dot-active"
            key="80"
            style={
              Object {
                "left": "80%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="90"
            style={
              Object {
                "left": "90%",
              }
            }
          />
        </div>
      </Steps>
      <Handle
        className="rc-slider-handle"
        disabled={false}
        key="0"
        max={100}
        min={0}
        offset={80}
        prefixCls="rc-slider"
        reverse={false}
        style={
          Object {
            "backgroundColor": "#21ba45",
            "borderColor": "#21ba45",
          }
        }
        value={80}
        vertical={false}
      >
        <div
          aria-disabled={false}
          aria-valuemax={100}
          aria-valuemin={0}
          aria-valuenow={80}
          className="rc-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="slider"
          style={
            Object {
              "backgroundColor": "#21ba45",
              "borderColor": "#21ba45",
              "left": "80%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={0}
        />
      </Handle>
      <Marks
        className="rc-slider-mark"
        included={false}
        lowerBound={0}
        marks={
          Object {
            "0": Object {
              "label": <Icon
                as="i"
                color="red"
                name="thumbs down"
              />,
              "style": Object {
                "color": "red",
              },
            },
            "100": Object {
              "label": <Icon
                as="i"
                color="green"
                name="thumbs up"
              />,
              "style": Object {
                "color": "green",
              },
            },
            "50": <Icon
              as="i"
              name="handshake"
            />,
          }
        }
        max={100}
        min={0}
        onClickLabel={[Function]}
        reverse={false}
        upperBound={80}
        vertical={false}
      >
        <div
          className="rc-slider-mark"
        >
          <span
            className="rc-slider-mark-text"
            key="0"
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "color": "red",
                "left": "0%",
                "msTransform": "translateX(-50%)",
                "transform": "translateX(-50%)",
              }
            }
          >
            <Icon
              as="i"
              color="red"
              name="thumbs down"
            >
              <i
                aria-hidden="true"
                className="red thumbs down icon"
                onClick={[Function]}
              />
            </Icon>
          </span>
          <span
            className="rc-slider-mark-text"
            key="50"
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "left": "50%",
                "msTransform": "translateX(-50%)",
                "transform": "translateX(-50%)",
              }
            }
          >
            <Icon
              as="i"
              name="handshake"
            >
              <i
                aria-hidden="true"
                className="handshake icon"
                onClick={[Function]}
              />
            </Icon>
          </span>
          <span
            className="rc-slider-mark-text"
            key="100"
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "color": "green",
                "left": "100%",
                "msTransform": "translateX(-50%)",
                "transform": "translateX(-50%)",
              }
            }
          >
            <Icon
              as="i"
              color="green"
              name="thumbs up"
            >
              <i
                aria-hidden="true"
                className="green thumbs up icon"
                onClick={[Function]}
              />
            </Icon>
          </span>
        </div>
      </Marks>
    </div>
  </ComponentEnhancer(undefined)>
</div>
`;

exports[`CurrentTrack render album renders and average vote that was 0 1`] = `
<div
  className="track-rating-container"
>
  <ComponentEnhancer(undefined)
    activeDotStyle={Object {}}
    className=""
    disabled={false}
    dotStyle={Object {}}
    dots={true}
    handle={[Function]}
    handleStyle={
      Object {
        "backgroundColor": "gray",
        "borderColor": "gray",
      }
    }
    included={false}
    marks={
      Object {
        "0": Object {
          "label": <Icon
            as="i"
            color="red"
            name="thumbs down"
          />,
          "style": Object {
            "color": "red",
          },
        },
        "100": Object {
          "label": <Icon
            as="i"
            color="green"
            name="thumbs up"
          />,
          "style": Object {
            "color": "green",
          },
        },
        "50": <Icon
          as="i"
          name="handshake"
        />,
      }
    }
    max={100}
    min={0}
    onAfterChange={[Function]}
    onBeforeChange={[Function]}
    onChange={[Function]}
    prefixCls="rc-slider"
    railStyle={Object {}}
    reverse={false}
    step={10}
    trackStyle={
      Array [
        Object {},
      ]
    }
    value={50}
    vertical={false}
  >
    <div
      className="rc-slider rc-slider-with-marks"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
      onMouseUp={[Function]}
      onTouchStart={[Function]}
    >
      <div
        className="rc-slider-rail"
        style={Object {}}
      />
      <Track
        className="rc-slider-track"
        included={false}
        length={50}
        offset={0}
        reverse={false}
        style={Object {}}
        vertical={false}
      />
      <Steps
        activeDotStyle={Object {}}
        dotStyle={Object {}}
        dots={true}
        included={false}
        lowerBound={0}
        marks={
          Object {
            "0": Object {
              "label": <Icon
                as="i"
                color="red"
                name="thumbs down"
              />,
              "style": Object {
                "color": "red",
              },
            },
            "100": Object {
              "label": <Icon
                as="i"
                color="green"
                name="thumbs up"
              />,
              "style": Object {
                "color": "green",
              },
            },
            "50": <Icon
              as="i"
              name="handshake"
            />,
          }
        }
        max={100}
        min={0}
        prefixCls="rc-slider"
        reverse={false}
        step={10}
        upperBound={50}
        vertical={false}
      >
        <div
          className="rc-slider-step"
        >
          <span
            className="rc-slider-dot"
            key="0"
            style={
              Object {
                "left": "0%",
              }
            }
          />
          <span
            className="rc-slider-dot rc-slider-dot-active"
            key="50"
            style={
              Object {
                "left": "50%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="100"
            style={
              Object {
                "left": "100%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="10"
            style={
              Object {
                "left": "10%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="20"
            style={
              Object {
                "left": "20%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="30"
            style={
              Object {
                "left": "30%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="40"
            style={
              Object {
                "left": "40%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="60"
            style={
              Object {
                "left": "60%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="70"
            style={
              Object {
                "left": "70%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="80"
            style={
              Object {
                "left": "80%",
              }
            }
          />
          <span
            className="rc-slider-dot"
            key="90"
            style={
              Object {
                "left": "90%",
              }
            }
          />
        </div>
      </Steps>
      <Handle
        className="rc-slider-handle"
        disabled={false}
        key="0"
        max={100}
        min={0}
        offset={50}
        prefixCls="rc-slider"
        reverse={false}
        style={
          Object {
            "backgroundColor": "gray",
            "borderColor": "gray",
          }
        }
        value={50}
        vertical={false}
      >
        <div
          aria-disabled={false}
          aria-valuemax={100}
          aria-valuemin={0}
          aria-valuenow={50}
          className="rc-slider-handle"
          onBlur={[Function]}
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          role="slider"
          style={
            Object {
              "backgroundColor": "gray",
              "borderColor": "gray",
              "left": "50%",
              "right": "auto",
              "transform": "translateX(-50%)",
            }
          }
          tabIndex={0}
        />
      </Handle>
      <Marks
        className="rc-slider-mark"
        included={false}
        lowerBound={0}
        marks={
          Object {
            "0": Object {
              "label": <Icon
                as="i"
                color="red"
                name="thumbs down"
              />,
              "style": Object {
                "color": "red",
              },
            },
            "100": Object {
              "label": <Icon
                as="i"
                color="green"
                name="thumbs up"
              />,
              "style": Object {
                "color": "green",
              },
            },
            "50": <Icon
              as="i"
              name="handshake"
            />,
          }
        }
        max={100}
        min={0}
        onClickLabel={[Function]}
        reverse={false}
        upperBound={50}
        vertical={false}
      >
        <div
          className="rc-slider-mark"
        >
          <span
            className="rc-slider-mark-text"
            key="0"
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "color": "red",
                "left": "0%",
                "msTransform": "translateX(-50%)",
                "transform": "translateX(-50%)",
              }
            }
          >
            <Icon
              as="i"
              color="red"
              name="thumbs down"
            >
              <i
                aria-hidden="true"
                className="red thumbs down icon"
                onClick={[Function]}
              />
            </Icon>
          </span>
          <span
            className="rc-slider-mark-text rc-slider-mark-text-active"
            key="50"
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "left": "50%",
                "msTransform": "translateX(-50%)",
                "transform": "translateX(-50%)",
              }
            }
          >
            <Icon
              as="i"
              name="handshake"
            >
              <i
                aria-hidden="true"
                className="handshake icon"
                onClick={[Function]}
              />
            </Icon>
          </span>
          <span
            className="rc-slider-mark-text"
            key="100"
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "color": "green",
                "left": "100%",
                "msTransform": "translateX(-50%)",
                "transform": "translateX(-50%)",
              }
            }
          >
            <Icon
              as="i"
              color="green"
              name="thumbs up"
            >
              <i
                aria-hidden="true"
                className="green thumbs up icon"
                onClick={[Function]}
              />
            </Icon>
          </span>
        </div>
      </Marks>
    </div>
  </ComponentEnhancer(undefined)>
</div>
`;

exports[`CurrentTrack render album renders track 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CurrentTrack
    onVote={[MockFunction]}
    progress={25}
    remaining={5}
    track={
      Object {
        "addedBy": Array [
          Object {
            "addedAt": "2020-01-27T20:19:49.207Z",
            "played": Array [
              Object {
                "at": "2020-01-27T20:20:48.148Z",
              },
              Object {
                "at": "2020-01-27T20:20:44.403Z",
              },
              Object {
                "at": "2020-01-27T20:20:41.006Z",
              },
            ],
            "user": Object {
              "__v": 0,
              "_id": "1117795953801840xxxxx",
              "fullname": "Duncan Robertson",
              "picture": "https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c",
            },
            "votes": Array [
              Object {
                "at": "2020-01-27T20:20:50.355Z",
                "user": Object {
                  "__v": 0,
                  "_id": "1117795953801840xxxxx",
                  "fullname": "Duncan Robertson",
                  "picture": "https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c",
                },
                "vote": 40,
              },
            ],
          },
        ],
        "album": Object {
          "name": "Chicken Song",
          "uri": "spotify:album:1Ozoc3hrpvwEpwnFkTNOGR",
        },
        "artist": Object {
          "name": "3 Shades",
          "uri": "spotify:artist:5YGwWwsOsMAwDN8mH0hn7M",
        },
        "image": "https://i.scdn.co/image/e0fc5e87ca6e137d4d7ef434f73edbfb4543286b",
        "length": 60000,
        "metrics": null,
        "name": "Chicken Song",
        "uri": "spotify:track:6BitwTrBfUrTdztRrQiw52",
        "year": "2019",
      }
    }
    userID="1117795953801840xxxxx"
  >
    <Card>
      <div
        className="ui card"
        onClick={[Function]}
      >
        <Image
          as="img"
          label={
            <TrackVotes
              metrics={null}
            />
          }
          src="https://i.scdn.co/image/e0fc5e87ca6e137d4d7ef434f73edbfb4543286b"
          ui={true}
        >
          <div
            className="ui image"
          >
            <TrackVotes
              metrics={null}
            />
            <img
              src="https://i.scdn.co/image/e0fc5e87ca6e137d4d7ef434f73edbfb4543286b"
            />
          </div>
        </Image>
        <CardContent>
          <div
            className="content"
          >
            <ProgressBar>
              <div
                className="progress-container"
              >
                <span
                  className="remaining-text"
                >
                  0:01
                </span>
                <span
                  className="track-length"
                >
                  1:00
                </span>
                <Line
                  className=""
                  percent={80}
                  prefixCls="rc-progress"
                  strokeColor="#2db7f5"
                  strokeLinecap="round"
                  strokeWidth={1}
                  style={Object {}}
                  trailColor="#D9D9D9"
                  trailWidth={1}
                >
                  <svg
                    className="rc-progress-line"
                    preserveAspectRatio="none"
                    style={Object {}}
                    viewBox="0 0 100 1"
                  >
                    <path
                      className="rc-progress-line-trail"
                      d="M 0.5,0.5
         L 99.5,0.5"
                      fillOpacity="0"
                      stroke="#D9D9D9"
                      strokeLinecap="round"
                      strokeWidth={1}
                    />
                    <path
                      className="rc-progress-line-path"
                      d="M 0.5,0.5
         L 99.5,0.5"
                      fillOpacity="0"
                      key="0"
                      stroke="#2db7f5"
                      strokeLinecap="round"
                      strokeWidth={1}
                      style={
                        Object {
                          "strokeDasharray": "79.2px, 100px",
                          "strokeDashoffset": "-0px",
                          "transition": "stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear",
                        }
                      }
                    />
                  </svg>
                </Line>
              </div>
            </ProgressBar>
            <CardHeader>
              <div
                className="header"
              >
                Chicken Song
              </div>
            </CardHeader>
            <CardMeta>
              <div
                className="meta"
              >
                3 Shades
              </div>
            </CardMeta>
            <AlbumDescription
              album={
                Object {
                  "name": "Chicken Song",
                  "uri": "spotify:album:1Ozoc3hrpvwEpwnFkTNOGR",
                }
              }
            >
              <CardDescription>
                <div
                  className="description"
                >
                  Chicken Song
                   (undefined)
                </div>
              </CardDescription>
            </AlbumDescription>
          </div>
        </CardContent>
        <CardContent
          extra={true}
        >
          <div
            className="extra content"
          >
            <div
              className="track-rating-container"
            >
              <ComponentEnhancer(undefined)
                activeDotStyle={Object {}}
                className=""
                disabled={false}
                dotStyle={Object {}}
                dots={true}
                handle={[Function]}
                handleStyle={
                  Object {
                    "backgroundColor": "red",
                    "borderColor": "red",
                  }
                }
                included={false}
                marks={
                  Object {
                    "0": Object {
                      "label": <Icon
                        as="i"
                        color="red"
                        name="thumbs down"
                      />,
                      "style": Object {
                        "color": "red",
                      },
                    },
                    "100": Object {
                      "label": <Icon
                        as="i"
                        color="green"
                        name="thumbs up"
                      />,
                      "style": Object {
                        "color": "green",
                      },
                    },
                    "50": <Icon
                      as="i"
                      name="handshake"
                    />,
                  }
                }
                max={100}
                min={0}
                onAfterChange={[Function]}
                onBeforeChange={[Function]}
                onChange={[Function]}
                prefixCls="rc-slider"
                railStyle={Object {}}
                reverse={false}
                step={10}
                trackStyle={
                  Array [
                    Object {},
                  ]
                }
                value={40}
                vertical={false}
              >
                <div
                  className="rc-slider rc-slider-with-marks"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                  onTouchStart={[Function]}
                >
                  <div
                    className="rc-slider-rail"
                    style={Object {}}
                  />
                  <Track
                    className="rc-slider-track"
                    included={false}
                    length={40}
                    offset={0}
                    reverse={false}
                    style={Object {}}
                    vertical={false}
                  />
                  <Steps
                    activeDotStyle={Object {}}
                    dotStyle={Object {}}
                    dots={true}
                    included={false}
                    lowerBound={0}
                    marks={
                      Object {
                        "0": Object {
                          "label": <Icon
                            as="i"
                            color="red"
                            name="thumbs down"
                          />,
                          "style": Object {
                            "color": "red",
                          },
                        },
                        "100": Object {
                          "label": <Icon
                            as="i"
                            color="green"
                            name="thumbs up"
                          />,
                          "style": Object {
                            "color": "green",
                          },
                        },
                        "50": <Icon
                          as="i"
                          name="handshake"
                        />,
                      }
                    }
                    max={100}
                    min={0}
                    prefixCls="rc-slider"
                    reverse={false}
                    step={10}
                    upperBound={40}
                    vertical={false}
                  >
                    <div
                      className="rc-slider-step"
                    >
                      <span
                        className="rc-slider-dot"
                        key="0"
                        style={
                          Object {
                            "left": "0%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="50"
                        style={
                          Object {
                            "left": "50%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="100"
                        style={
                          Object {
                            "left": "100%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="10"
                        style={
                          Object {
                            "left": "10%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="20"
                        style={
                          Object {
                            "left": "20%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="30"
                        style={
                          Object {
                            "left": "30%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot rc-slider-dot-active"
                        key="40"
                        style={
                          Object {
                            "left": "40%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="60"
                        style={
                          Object {
                            "left": "60%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="70"
                        style={
                          Object {
                            "left": "70%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="80"
                        style={
                          Object {
                            "left": "80%",
                          }
                        }
                      />
                      <span
                        className="rc-slider-dot"
                        key="90"
                        style={
                          Object {
                            "left": "90%",
                          }
                        }
                      />
                    </div>
                  </Steps>
                  <Handle
                    className="rc-slider-handle"
                    disabled={false}
                    key="0"
                    max={100}
                    min={0}
                    offset={40}
                    prefixCls="rc-slider"
                    reverse={false}
                    style={
                      Object {
                        "backgroundColor": "red",
                        "borderColor": "red",
                      }
                    }
                    value={40}
                    vertical={false}
                  >
                    <div
                      aria-disabled={false}
                      aria-valuemax={100}
                      aria-valuemin={0}
                      aria-valuenow={40}
                      className="rc-slider-handle"
                      onBlur={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      role="slider"
                      style={
                        Object {
                          "backgroundColor": "red",
                          "borderColor": "red",
                          "left": "40%",
                          "right": "auto",
                          "transform": "translateX(-50%)",
                        }
                      }
                      tabIndex={0}
                    />
                  </Handle>
                  <Marks
                    className="rc-slider-mark"
                    included={false}
                    lowerBound={0}
                    marks={
                      Object {
                        "0": Object {
                          "label": <Icon
                            as="i"
                            color="red"
                            name="thumbs down"
                          />,
                          "style": Object {
                            "color": "red",
                          },
                        },
                        "100": Object {
                          "label": <Icon
                            as="i"
                            color="green"
                            name="thumbs up"
                          />,
                          "style": Object {
                            "color": "green",
                          },
                        },
                        "50": <Icon
                          as="i"
                          name="handshake"
                        />,
                      }
                    }
                    max={100}
                    min={0}
                    onClickLabel={[Function]}
                    reverse={false}
                    upperBound={40}
                    vertical={false}
                  >
                    <div
                      className="rc-slider-mark"
                    >
                      <span
                        className="rc-slider-mark-text"
                        key="0"
                        onMouseDown={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "color": "red",
                            "left": "0%",
                            "msTransform": "translateX(-50%)",
                            "transform": "translateX(-50%)",
                          }
                        }
                      >
                        <Icon
                          as="i"
                          color="red"
                          name="thumbs down"
                        >
                          <i
                            aria-hidden="true"
                            className="red thumbs down icon"
                            onClick={[Function]}
                          />
                        </Icon>
                      </span>
                      <span
                        className="rc-slider-mark-text"
                        key="50"
                        onMouseDown={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "left": "50%",
                            "msTransform": "translateX(-50%)",
                            "transform": "translateX(-50%)",
                          }
                        }
                      >
                        <Icon
                          as="i"
                          name="handshake"
                        >
                          <i
                            aria-hidden="true"
                            className="handshake icon"
                            onClick={[Function]}
                          />
                        </Icon>
                      </span>
                      <span
                        className="rc-slider-mark-text"
                        key="100"
                        onMouseDown={[Function]}
                        onTouchStart={[Function]}
                        style={
                          Object {
                            "color": "green",
                            "left": "100%",
                            "msTransform": "translateX(-50%)",
                            "transform": "translateX(-50%)",
                          }
                        }
                      >
                        <Icon
                          as="i"
                          color="green"
                          name="thumbs up"
                        >
                          <i
                            aria-hidden="true"
                            className="green thumbs up icon"
                            onClick={[Function]}
                          />
                        </Icon>
                      </span>
                    </div>
                  </Marks>
                </div>
              </ComponentEnhancer(undefined)>
            </div>
          </div>
        </CardContent>
        <CardContent
          extra={true}
        >
          <div
            className="extra content"
          >
            <AddLabel
              count={1}
            >
              <Label
                size="mini"
              >
                <div
                  className="ui mini label"
                  onClick={[Function]}
                >
                  Added
                  <LabelDetail>
                    <div
                      className="detail"
                    >
                      1
                    </div>
                  </LabelDetail>
                </div>
              </Label>
            </AddLabel>
            <PlayLabel
              metrics={null}
            />
            <VoteLabel
              metrics={null}
            />
            <VotedBy
              show={true}
              size="mini"
              total={40}
              votes={
                Array [
                  Object {
                    "at": "2020-01-27T20:20:50.355Z",
                    "user": Object {
                      "__v": 0,
                      "_id": "1117795953801840xxxxx",
                      "fullname": "Duncan Robertson",
                      "picture": "https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c",
                    },
                    "vote": 40,
                  },
                ]
              }
            >
              <Popup
                content={
                  <List>
                    <ListItem>
                      <Image
                        as="img"
                        avatar={true}
                        className="voted_by_avatar_image"
                        src="https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c"
                        ui={true}
                      />
                      <ListContent>
                        <ListDescription>
                          <strong>
                            27 Jan 2020 @ 8:20 pm
                          </strong>
                           - 
                          Duncan Robertson
                           
                          <Label
                            circular={true}
                            size="mini"
                          >
                            -1
                          </Label>
                        </ListDescription>
                      </ListContent>
                    </ListItem>
                  </List>
                }
                disabled={false}
                eventsEnabled={true}
                on={
                  Array [
                    "click",
                    "hover",
                  ]
                }
                pinned={false}
                popperModifiers={Array []}
                position="top left"
                trigger={
                  <Label
                    basic={true}
                    className="track-label vote-track-label"
                    color="grey"
                    content={-1}
                    icon="thumbs down"
                    ribbon={null}
                    size="mini"
                  />
                }
                wide="very"
              >
                <Portal
                  closeOnDocumentClick={true}
                  closeOnEscape={true}
                  closeOnTriggerClick={true}
                  closeOnTriggerMouseLeave={true}
                  eventPool="default"
                  mouseEnterDelay={50}
                  mouseLeaveDelay={70}
                  onClose={[Function]}
                  onMount={[Function]}
                  onOpen={[Function]}
                  onUnmount={[Function]}
                  openOnTriggerClick={true}
                  openOnTriggerMouseEnter={true}
                  trigger={
                    <Label
                      basic={true}
                      className="track-label vote-track-label"
                      color="grey"
                      content={-1}
                      icon="thumbs down"
                      ribbon={null}
                      size="mini"
                    />
                  }
                  triggerRef={
                    Object {
                      "current": <div
                        class="ui grey mini basic label track-label vote-track-label"
                      >
                        <i
                          aria-hidden="true"
                          class="thumbs down icon"
                        />
                        -1
                      </div>,
                    }
                  }
                >
                  <Ref
                    innerRef={[Function]}
                  >
                    <RefFindNode
                      innerRef={[Function]}
                    >
                      <Label
                        basic={true}
                        className="track-label vote-track-label"
                        color="grey"
                        content={-1}
                        icon="thumbs down"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        ribbon={null}
                        size="mini"
                      >
                        <div
                          className="ui grey mini basic label track-label vote-track-label"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                        >
                          <Icon
                            as="i"
                            name="thumbs down"
                          >
                            <i
                              aria-hidden="true"
                              className="thumbs down icon"
                              onClick={[Function]}
                            />
                          </Icon>
                          -1
                        </div>
                      </Label>
                    </RefFindNode>
                  </Ref>
                </Portal>
              </Popup>
            </VotedBy>
          </div>
        </CardContent>
        <CardContent
          extra={true}
        >
          <div
            className="extra content"
          >
            <AddedBy
              users={
                Array [
                  Object {
                    "addedAt": "2020-01-27T20:19:49.207Z",
                    "played": Array [
                      Object {
                        "at": "2020-01-27T20:20:48.148Z",
                      },
                      Object {
                        "at": "2020-01-27T20:20:44.403Z",
                      },
                      Object {
                        "at": "2020-01-27T20:20:41.006Z",
                      },
                    ],
                    "user": Object {
                      "__v": 0,
                      "_id": "1117795953801840xxxxx",
                      "fullname": "Duncan Robertson",
                      "picture": "https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c",
                    },
                    "votes": Array [
                      Object {
                        "at": "2020-01-27T20:20:50.355Z",
                        "user": Object {
                          "__v": 0,
                          "_id": "1117795953801840xxxxx",
                          "fullname": "Duncan Robertson",
                          "picture": "https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c",
                        },
                        "vote": 40,
                      },
                    ],
                  },
                ]
              }
            >
              <Popup
                content={
                  <List
                    className="added-by-list"
                  >
                    <ListItem>
                      <Image
                        as="img"
                        avatar={true}
                        className="added_by_avatar_image"
                        src="https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c"
                        ui={true}
                      />
                      <ListContent>
                        <ListDescription>
                          <strong>
                            27 Jan 2020 @ 8:19 pm
                          </strong>
                           - 
                          Duncan Robertson
                        </ListDescription>
                      </ListContent>
                    </ListItem>
                  </List>
                }
                disabled={false}
                eventsEnabled={true}
                on={
                  Array [
                    "click",
                    "hover",
                  ]
                }
                pinned={false}
                popperModifiers={Array []}
                position="top left"
                trigger={
                  <Image
                    as="img"
                    avatar={true}
                    className="added_by_avatar_image"
                    src="https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c"
                    ui={true}
                  />
                }
                wide={true}
              >
                <Portal
                  closeOnDocumentClick={true}
                  closeOnEscape={true}
                  closeOnTriggerClick={true}
                  closeOnTriggerMouseLeave={true}
                  eventPool="default"
                  mouseEnterDelay={50}
                  mouseLeaveDelay={70}
                  onClose={[Function]}
                  onMount={[Function]}
                  onOpen={[Function]}
                  onUnmount={[Function]}
                  openOnTriggerClick={true}
                  openOnTriggerMouseEnter={true}
                  trigger={
                    <Image
                      as="img"
                      avatar={true}
                      className="added_by_avatar_image"
                      src="https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c"
                      ui={true}
                    />
                  }
                  triggerRef={
                    Object {
                      "current": <img
                        class="ui avatar image added_by_avatar_image"
                        src="https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c"
                      />,
                    }
                  }
                >
                  <Ref
                    innerRef={[Function]}
                  >
                    <RefFindNode
                      innerRef={[Function]}
                    >
                      <Image
                        as="img"
                        avatar={true}
                        className="added_by_avatar_image"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        src="https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c"
                        ui={true}
                      >
                        <img
                          className="ui avatar image added_by_avatar_image"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                          onMouseEnter={[Function]}
                          onMouseLeave={[Function]}
                          src="https://lh3.googleusercontent.com/a-/AAuE7mA6MSypnscAYS2lpAz-cKY1xnT3K-HUmzgpV8xExw=s96-c"
                        />
                      </Image>
                    </RefFindNode>
                  </Ref>
                </Portal>
              </Popup>
            </AddedBy>
            <a
              className="track-uri"
              href="https://open.spotify.com/track/6BitwTrBfUrTdztRrQiw52"
              rel="noopener noreferrer"
              target="_blank"
            >
              spotify:track:6BitwTrBfUrTdztRrQiw52
            </a>
          </div>
        </CardContent>
      </div>
    </Card>
  </CurrentTrack>
</Provider>
`;

exports[`CurrentTrack when missing data renders defaults 1`] = `
<Card>
  <Image
    as="img"
    label={
      <TrackVotes
        metrics={
          Object {
            "plays": 0,
            "votes": 0,
            "votesAverage": 50,
            "votesTotal": 100,
          }
        }
      />
    }
    src="https://i.scdn.co/image/ab67616d0000b273f5d46038d259167ee9791bee"
    ui={true}
  />
  <CardContent>
    <ProgressBar />
    <CardHeader>
      I Know Him So Well
    </CardHeader>
    <CardMeta>
      Geraldine McQueen
    </CardMeta>
    <AlbumDescription />
  </CardContent>
  <CardContent
    extra={true}
  >
    <div
      className="track-rating-container"
    >
      <ComponentEnhancer(undefined)
        activeDotStyle={Object {}}
        className=""
        disabled={true}
        dotStyle={Object {}}
        dots={true}
        handle={[Function]}
        handleStyle={
          Object {
            "backgroundColor": "red",
            "borderColor": "red",
          }
        }
        included={false}
        marks={
          Object {
            "0": Object {
              "label": <Icon
                as="i"
                color="red"
                name="thumbs down"
              />,
              "style": Object {
                "color": "red",
              },
            },
            "100": Object {
              "label": <Icon
                as="i"
                color="green"
                name="thumbs up"
              />,
              "style": Object {
                "color": "green",
              },
            },
            "50": <Icon
              as="i"
              name="handshake"
            />,
          }
        }
        max={100}
        min={0}
        onAfterChange={[Function]}
        onBeforeChange={[Function]}
        onChange={[Function]}
        prefixCls="rc-slider"
        railStyle={Object {}}
        reverse={false}
        step={10}
        trackStyle={
          Array [
            Object {},
          ]
        }
        value={null}
        vertical={false}
      />
    </div>
  </CardContent>
  <CardContent
    extra={true}
  >
    <AddLabel
      count={0}
    />
    <PlayLabel
      metrics={
        Object {
          "plays": 0,
          "votes": 0,
          "votesAverage": 50,
          "votesTotal": 100,
        }
      }
    />
    <VoteLabel
      metrics={
        Object {
          "plays": 0,
          "votes": 0,
          "votesAverage": 50,
          "votesTotal": 100,
        }
      }
    />
    <VotedBy
      show={false}
      size="mini"
      total={0}
      votes={Array []}
    />
  </CardContent>
  <CardContent
    extra={true}
  >
    <AddedBy />
    <a
      className="track-uri"
      href="https://open.spotify.com/track/6hp4DW1Z1RInKvO5ijj9nW"
      rel="noopener noreferrer"
      target="_blank"
    >
      spotify:track:6hp4DW1Z1RInKvO5ijj9nW
    </a>
  </CardContent>
</Card>
`;

exports[`CurrentTrack when no image renders default image 1`] = `
<Image
  as="img"
  label={
    <TrackVotes
      metrics={
        Object {
          "plays": 1,
          "votes": 1,
          "votesAverage": 80,
          "votesTotal": 80,
        }
      }
    />
  }
  src="default-artwork.png"
  ui={true}
/>
`;
