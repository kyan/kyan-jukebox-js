{"version":3,"sources":["components/current-track/default-artwork.png","utils/spotify/index.js","components/error-boundary/index.js","contexts/google.js","constants/mopidy-api.js","constants/common.js","actions/index.js","votes/constants.js","search/constants.ts","utils/time/index.js","search/actions/index.ts","constants/auth-api.js","utils/payload/index.ts","utils/notify/index.js","utils/on-message-handler/index.js","utils/state/index.js","middleware/jukebox-middleware/index.ts","reducers/track/index.js","reducers/tracklist/index.js","reducers/timer/index.js","reducers/jukebox/index.js","reducers/settings/index.js","search/reducers/search.ts","search/reducers/curated-list.ts","reducers/index.js","hooks/usePageVisibility/index.tsx","components/skip-buttons/index.js","components/controls/index.js","components/url-drop-area/index.js","components/drag-in-track/index.js","components/added-by/index.js","components/voted-by/index.js","components/progress-bar/index.js","components/current-track/index.js","containers/current-track-container/index.js","votes/actions/index.js","components/settings/index.js","components/remove-track/index.js","components/tracklist/index.js","search/components/button/index.tsx","components/volume-buttons/index.js","components/clear-playlist/index.js","search/components/search-item/index.tsx","search/components/draggable-search-item/index.tsx","search/components/sidebar/index.tsx","search/index.tsx","dashboard/index.js","containers/dashboard-container/index.js","App.tsx","index.tsx"],"names":["module","exports","transformUrl","url","uri","replace","match","ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","GoogleAuthContext","createContext","ADD_CURRENT_TRACK","ADD_TRACKS","CONNECT","CONNECTING","CONNECTED","DISCONNECT","DISCONNECTED","DROP_TYPES","SEND","STORE_TOKEN","CLEAR_STORE_TOKEN","UPDATE_VOLUME","UPDATE_PLAYBACK_STATE","UPDATE_PROGRESS_TIMER","MOPIDY_CONNECTED","MOPIDY_DISCONNECTED","SYNC_SOCIAL_DATA","updateToken","token","expires","type","Types","tokenExpires","clearToken","addNewTrack","key","MopidyApi","params","uris","addNewTracks","map","addCurrentTrack","track","syncSocialData","addTrackList","tracks","removeFromTracklist","criteria","updateProgressTimer","position","duration","Infinity","wsConnect","wsConnecting","wsConnected","wsDisconnect","wsDisconnected","mopidyConnected","mopidyDisconnected","getCurrentTrack","getTimePosition","getState","getTrackList","clearTrackList","startPlaying","stopPlaying","pausePlaying","nextPlaying","previousPlaying","getVolume","updateVolume","volume","updatePlaybackState","setVolume","Number","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","millisToSeconds","toggleSearchSidebar","open","Search","storeSearchQuery","query","search","options","removeFromSearchResults","Payload","decode","payload","JSON","parse","encodeToJson","jwt","data","stringify","Notify","id","title","message","store","addNotification","insert","container","dismiss","success","warning","dispatch","actions","onMessageHandler","progressTimer","user","AuthApi","console","progress","set","length","jukebox","playbackState","start","stop","playBackChanged","tracklist","fullname","SearchConst","results","VoteConst","State","loadInitial","forEach","action","JukeboxMiddleware","socket","process","next","packMessage","settings","onMopidyStateChange","online","onOpen","ProgressTimer","callback","fallbackTargetFrameRate","disableRequestAnimationFrame","trackProgressTimer","onClose","onMessage","onSearchResults","onVote","Constants","close","io","transports","on","reset","emit","VoteConstant","Object","assign","addedBy","metrics","initalProgressState","remaining","timer","initalState","mopidyOnline","searchSideBarOpen","limit","offset","total","Constant","filter","includes","curate","exists","find","push","list","a","splice","b","jukeboxApp","combineReducers","curatedList","getIsDocumentHidden","document","msHidden","webkitHidden","usePageVisibility","useState","isVisible","setIsVisible","onVisibilityChange","useEffect","visibilityChange","addEventListener","removeEventListener","PreviousButton","Button","onClick","animated","className","disabled","Content","hidden","visible","Icon","name","NextButton","SkipButtons","onPrevious","onNext","PlayButton","active","PauseButton","StopButton","Controls","useSelector","onPlay","onPause","onStop","UrlDropArea","connectDropTarget","isOver","DropTarget","accepts","drop","monitor","onDrop","connect","dropTarget","DragInTrack","backend","HTML5Backend","addedByContent","users","List","i","fullName","Item","userPicture","Description","dateFormat","addedAt","picture","Image","avatar","src","AddedBy","Popup","wide","content","trigger","voteNormaliser","v","round","votedByContent","votes","voteScore","Label","circular","size","vote","at","voteLabel","basic","color","icon","normalisedTotal","ribbon","VotedBy","voteCount","show","ProgressBar","progressPercentage","percentage","isNaN","timerToPercentage","percent","marks","0","style","label","50","100","spotifyLink","code","split","pop","AlbumDescription","year","album","Card","calcVoteAverage","mean","flatten","voteHandleColor","TrackVotes","votesAverage","AddLabel","Detail","count","PlayLabel","plays","VoteLabel","CurrentTrack","userID","defaultImage","Header","currentUserVoter","u","_id","currentUserVote","image","Meta","artist","extra","dots","value","included","step","onChange","rating","handleStyle","borderColor","backgroundColor","href","target","rel","CurrentTrackContainer","googleUser","useContext","useDispatch","googleId","Vote","voteActions","Settings","grantOfflineAccess","signOut","floated","profileObj","rounded","imageUrl","Fragment","RemoveTrack","setOpen","Comment","Action","Confirm","cancelButton","confirmButton","onCancel","onConfirm","ev","TrackImage","Avatar","isCurrent","ImageChooser","TrackHeading","Author","TrackDescription","Text","as","artistName","trackLength","CurrentVote","ActionRemove","cb","CurrentPlays","ListItems","beenPlayed","current","classnames","onArtistSearch","Actions","onRemove","Tracklist","Group","currentTrack","onRemoveTrack","SearchButton","volumeUp","volumeDown","VolumeDownButton","VolumeUpButton","VolumeButtons","onVolumeChange","Or","text","ClearPlaylist","horizontal","onClear","VoteInfo","SearchItem","explicit","alt","undefined","onAdd","DraggableSearchItem","draggable","onDragStart","e","dataTransfer","setData","String","getData","parseInt","SearchItems","MixItems","onSwap","YourMix","Divider","inverted","divided","onRemoveFromMix","onSwapTracks","fluid","onAddTracks","onSubmit","onQueryChange","onAddTrack","onAddTrackToMix","totalPages","onPageChange","inputEl","useRef","Sidebar","Pushable","animation","vertical","width","direction","onShow","focus","Form","Field","ref","aria-label","placeholder","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","relaxed","Pusher","dimmed","selectSearch","selectCuratedList","SearchContainer","onSearch","activePage","searchOptions","searchActions","mopidyActions","evt","_","Dashboard","onTracklistClear","onSearchClick","Dimmer","Dimmable","blurring","Container","Grid","stackable","columns","Column","DragDropContext","isSignedIn","auth2","disable","expiresAt","tokenId","Date","now","currentUser","get","reloadAuthResponse","then","response","expires_at","id_token","err","warn","useCallback","_item","urls","getItem","slice","createStore","composeWithDevTools","applyMiddleware","jukeboxMiddleware","App","googleAuth","useGoogleLogin","clientId","hostedDomain","GOOGLE_AUTH_DOMAIN","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.57dd0300.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-artwork.6bba9800.png\";","// https://open.spotify.com/track/0c41pMosF5Kqwwegcps8ES\nconst transformUrl = url => {\n  const uri = url.replace(/^.*\\/track\\//, 'spotify:track:')\n  return uri.match(/spotify:track/g) ? uri : null\n}\n\nmodule.exports = {\n  transformUrl\n}\n","import React from 'react'\n\n// uses code from https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true })\n\n    // You can also log the error to an error reporting service\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`error: ${error}`)\n      console.log(`info: ${info}`)\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ouch! I broke a bit.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\n\nconst GoogleAuthContext = React.createContext()\n\nexport default GoogleAuthContext\n","export default {\n  PLAYBACK_GET_CURRENT_TRACK: 'playback.getCurrentTrack',\n  EVENT_TRACK_PLAYBACK_STARTED: 'event:trackPlaybackStarted',\n  EVENT_PLAYBACK_STATE_CHANGED: 'event:playbackStateChanged',\n  EVENT_PLAYBACK_STATE_RESUMED: 'event:trackPlaybackResumed',\n  TRACKLIST_GET_TRACKS: 'tracklist.getTracks',\n  TRACKLIST_ADD_TRACK: 'tracklist.add',\n  TRACKLIST_REMOVE_TRACK: 'tracklist.remove',\n  TRACKLIST_CLEAR: 'tracklist.clear',\n  PLAYBACK_GET_TIME_POSITION: 'playback.getTimePosition',\n  PLAYBACK_GET_PLAYBACK_STATE: 'playback.getState',\n  PLAYBACK_PLAY: 'playback.play',\n  PLAYBACK_STOP: 'playback.stop',\n  PLAYBACK_PAUSE: 'playback.pause',\n  PLAYBACK_NEXT: 'playback.next',\n  PLAYBACK_BACK: 'playback.previous',\n  PLAYING: 'playing',\n  PAUSED: 'paused',\n  STOPPED: 'stopped',\n  SET_VOLUME: 'mixer.setVolume',\n  GET_VOLUME: 'mixer.getVolume',\n  EVENT_VOLUME_CHANGED: 'event:volumeChanged',\n  VALIDATION_ERROR: 'validationError'\n}\n","export default {\n  ADD_CURRENT_TRACK: 'actionAddCurrentTrack',\n  ADD_TRACKS: 'actionAddTracks',\n  CONNECT: 'actionConnect',\n  CONNECTING: 'actionConnecting',\n  CONNECTED: 'actionConnected',\n  DISCONNECT: 'actionDisconnect',\n  DISCONNECTED: 'actionDisconnected',\n  DROP_TYPES: ['__NATIVE_URL__'],\n  SEND: 'actionSend',\n  STORE_TOKEN: 'actionStoreToken',\n  CLEAR_STORE_TOKEN: 'actionClearStoreToken',\n  UPDATE_VOLUME: 'actionUpdateVolume',\n  UPDATE_PLAYBACK_STATE: 'actionPlaybackState',\n  UPDATE_PROGRESS_TIMER: 'actionUpdateProgressTimer',\n  MOPIDY_CONNECTED: 'actionMopidyConnected',\n  MOPIDY_DISCONNECTED: 'actionMopidyDisconnected',\n  SYNC_SOCIAL_DATA: 'syncSocialData'\n}\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\nimport { transformUrl } from 'utils/spotify'\n\nexport const updateToken = (token, expires) => {\n  return {\n    type: Types.STORE_TOKEN,\n    tokenExpires: expires,\n    token\n  }\n}\n\nexport const clearToken = () => {\n  return {\n    type: Types.CLEAR_STORE_TOKEN\n  }\n}\n\nexport const addNewTrack = url => {\n  let uri = transformUrl(url)\n\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { uris: [uri] }\n  }\n}\n\nexport const addNewTracks = uris => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_ADD_TRACK,\n    params: { uris: uris.map(uri => transformUrl(uri)) }\n  }\n}\n\nexport const addCurrentTrack = track => {\n  return {\n    type: Types.ADD_CURRENT_TRACK,\n    track\n  }\n}\n\nexport const syncSocialData = track => {\n  return {\n    type: Types.SYNC_SOCIAL_DATA,\n    track\n  }\n}\n\nexport const addTrackList = tracks => {\n  return {\n    type: Types.ADD_TRACKS,\n    tracks\n  }\n}\n\nexport const removeFromTracklist = uri => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_REMOVE_TRACK,\n    params: { criteria: { uri: [uri] } }\n  }\n}\n\nexport const updateProgressTimer = (position, duration) => {\n  if (duration === Infinity) {\n    duration = 0\n  }\n\n  return {\n    type: Types.UPDATE_PROGRESS_TIMER,\n    position,\n    duration\n  }\n}\n\nexport const wsConnect = () => {\n  return {\n    type: Types.CONNECT\n  }\n}\n\nexport const wsConnecting = () => {\n  return {\n    type: Types.CONNECTING\n  }\n}\n\nexport const wsConnected = () => {\n  return {\n    type: Types.CONNECTED\n  }\n}\n\nexport const wsDisconnect = () => {\n  return {\n    type: Types.DISCONNECT\n  }\n}\n\nexport const wsDisconnected = () => {\n  return {\n    type: Types.DISCONNECTED\n  }\n}\n\nexport const mopidyConnected = () => {\n  return {\n    type: Types.MOPIDY_CONNECTED\n  }\n}\n\nexport const mopidyDisconnected = () => {\n  return {\n    type: Types.MOPIDY_DISCONNECTED\n  }\n}\n\nexport const getCurrentTrack = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_CURRENT_TRACK\n  }\n}\n\nexport const getTimePosition = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_TIME_POSITION\n  }\n}\n\nexport const getState = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_GET_PLAYBACK_STATE\n  }\n}\n\nexport const getTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_GET_TRACKS\n  }\n}\n\nexport const clearTrackList = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.TRACKLIST_CLEAR\n  }\n}\n\nexport const startPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PLAY\n  }\n}\n\nexport const stopPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_STOP\n  }\n}\n\nexport const pausePlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_PAUSE\n  }\n}\n\nexport const nextPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_NEXT\n  }\n}\n\nexport const previousPlaying = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.PLAYBACK_BACK\n  }\n}\n\nexport const getVolume = () => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.GET_VOLUME\n  }\n}\n\nexport const updateVolume = volume => {\n  return {\n    type: Types.UPDATE_VOLUME,\n    volume\n  }\n}\n\nexport const updatePlaybackState = state => {\n  return {\n    type: Types.UPDATE_PLAYBACK_STATE,\n    state\n  }\n}\n\nexport const setVolume = volume => {\n  return {\n    type: Types.SEND,\n    key: MopidyApi.SET_VOLUME,\n    params: [Number(volume)]\n  }\n}\n","export default {\n  VOTE: 'actionVote',\n  CAST_VOTE: 'castVote',\n  VOTE_CASTED: 'voteCasted'\n}\n","export default {\n  SEARCH: 'actionTrackSearch',\n  SEARCH_GET_TRACKS: 'searchGetTracks',\n  STORE_SEARCH_RESULTS: 'actionStoreSearchResults',\n  STORE_SEARCH_QUERY: 'actionStoreSearchQuery',\n  TOGGLE_SEARCH_SIDEBAR: 'actionToggleSearchSidebar',\n  REMOVE_FROM_SEARCH_RESULTS: 'actionRemoveFromSearchResults',\n  ADD_TRACK_TO_MIX: 'curateAddTrackToMix',\n  REMOVE_TRACK_FROM_MIX: 'curateRemoveTracksFromMix',\n  SWAP_TRACKS: 'searchSwapTracks',\n  CLEAR_MIX: 'searchClearMix'\n}\n","import ProgressTimer from 'media-progress-timer'\n\nexport const millisToMinutesAndSeconds = millis => {\n  let minutes = Math.floor(millis / 60000)\n  let seconds = ((millis % 60000) / 1000).toFixed(0)\n  return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n}\n\nexport const millisToSeconds = millis => {\n  return millis * 0.001\n}\n\nexport const timerToPercentage = timer => {\n  if (timer.duration === 0) {\n    return 0\n  }\n  const position = millisToSeconds(timer.position)\n  const duration = millisToSeconds(timer.duration)\n  const percentage = Math.round((position / duration) * 100)\n\n  return isNaN(percentage) ? 0 : percentage\n}\n\nexport const trackProgressTimer = (store, actions) => {\n  return ProgressTimer({\n    callback: (position, duration) => {\n      store.dispatch(actions.updateProgressTimer(position, duration))\n    },\n    fallbackTargetFrameRate: 1,\n    disableRequestAnimationFrame: true\n  })\n}\n","import Search from 'search/constants'\n\nexport const toggleSearchSidebar = (open: boolean) => {\n  return {\n    type: Search.TOGGLE_SEARCH_SIDEBAR,\n    open\n  }\n}\n\nexport const storeSearchResults = (results: any[]) => {\n  return {\n    type: Search.STORE_SEARCH_RESULTS,\n    results\n  }\n}\n\nexport const storeSearchQuery = (query: string | null) => {\n  return {\n    type: Search.STORE_SEARCH_QUERY,\n    query\n  }\n}\n\nexport const search = (query: string, options: any) => {\n  return {\n    type: Search.SEARCH,\n    key: Search.SEARCH_GET_TRACKS,\n    params: { query, options }\n  }\n}\n\nexport const removeFromSearchResults = (uris: string[]) => {\n  return {\n    type: Search.REMOVE_FROM_SEARCH_RESULTS,\n    uris\n  }\n}\n\nexport const addTrackToMix = (track: any) => {\n  return {\n    type: Search.ADD_TRACK_TO_MIX,\n    track\n  }\n}\n\nexport const removeFromMix = (uri: string) => {\n  return {\n    type: Search.REMOVE_TRACK_FROM_MIX,\n    uri\n  }\n}\n\nexport const swapTracks = (a: number, b: number) => {\n  return {\n    type: Search.SWAP_TRACKS,\n    a,\n    b\n  }\n}\n\nexport const clearMix = () => {\n  return {\n    type: Search.CLEAR_MIX\n  }\n}\n","export default {\n  AUTHENTICATION_TOKEN_INVALID: 'authenticationTokenInvalid'\n}\n","export interface PayLoadInterface {\n  jwt: string\n  key: string\n  data: any\n}\n\nconst Payload = {\n  decode: (payload: string): PayLoadInterface => JSON.parse(payload),\n  encodeToJson: ({ jwt, key, data }: PayLoadInterface): string => JSON.stringify({ jwt, key, data })\n}\n\nexport default Payload\n","import { store } from 'react-notifications-component'\n\nconst Notify = {\n  info: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'info',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 3000\n      }\n    })\n  },\n  success: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'success',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 3000\n      }\n    })\n  },\n  warning: ({ id, title, message }) => {\n    return store.addNotification({\n      id,\n      title,\n      message,\n      type: 'warning',\n      insert: 'top',\n      container: 'bottom-left',\n      dismiss: {\n        duration: 5000\n      }\n    })\n  }\n}\n\nexport default Notify\n","import * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport AuthApi from 'constants/auth-api'\nimport MopidyApi from 'constants/mopidy-api'\nimport SearchConst from 'search/constants'\nimport VoteConst from 'votes/constants'\nimport Payload from 'utils/payload'\nimport Notify from 'utils/notify'\n\nconst updatePlaybackState = (store, state) => {\n  store.dispatch(actions.updatePlaybackState(state))\n}\n\nconst playBackChanged = (store, state, progress) => {\n  switch (state) {\n    case MopidyApi.PAUSED:\n    case MopidyApi.STOPPED:\n      updatePlaybackState(store, state)\n      progress.stop()\n      break\n    case MopidyApi.PLAYING:\n      updatePlaybackState(store, state)\n      progress.start()\n      break\n    default:\n      break\n  }\n}\n\nconst addCurrentTrack = (track, store, progress) => {\n  store.dispatch(actions.addCurrentTrack(track))\n  store.dispatch(actions.syncSocialData(track))\n  const progressTimer = progress.set(0, track.length)\n  if (store.getState().jukebox.playbackState === MopidyApi.PLAYING) {\n    progressTimer.start()\n  }\n}\n\nconst addTrackList = (tracklist, store) => {\n  store.dispatch(actions.addTrackList(tracklist))\n}\n\nconst onMessageHandler = (store, payload, progressTimer) => {\n  const { key, data, user } = Payload.decode(payload)\n\n  switch (key) {\n    case AuthApi.AUTHENTICATION_TOKEN_INVALID:\n      console.error(`AUTHENTICATION_TOKEN_INVALID: ${data.error}`)\n      store.dispatch(actions.clearToken())\n      break\n    case MopidyApi.PLAYBACK_GET_CURRENT_TRACK:\n    case MopidyApi.EVENT_TRACK_PLAYBACK_STARTED:\n      if (data) addCurrentTrack(data, store, progressTimer)\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_CHANGED:\n    case MopidyApi.PLAYBACK_GET_PLAYBACK_STATE:\n      playBackChanged(store, data, progressTimer)\n      break\n    case MopidyApi.TRACKLIST_GET_TRACKS:\n      addTrackList(data, store)\n      break\n    case MopidyApi.PLAYBACK_NEXT:\n    case MopidyApi.PLAYBACK_BACK:\n      store.dispatch(actions.getCurrentTrack())\n      break\n    case MopidyApi.SET_VOLUME:\n      Notify.info({\n        title: 'Volume Updated',\n        message: `${user.fullname} changed it to ${data.volume}`\n      })\n      break\n    case MopidyApi.TRACKLIST_REMOVE_TRACK:\n      Notify.warning({\n        title: 'Track Removed',\n        message: `${user.fullname} removed: ${data.message}`\n      })\n      break\n    case MopidyApi.TRACKLIST_ADD_TRACK:\n      Notify.success({\n        title: 'New Track',\n        message: `${user.fullname} added: ${data.message}`\n      })\n      break\n    case MopidyApi.GET_VOLUME:\n    case MopidyApi.EVENT_VOLUME_CHANGED:\n      store.dispatch(actions.updateVolume(data.volume))\n      break\n    case MopidyApi.PLAYBACK_GET_TIME_POSITION:\n      progressTimer.set(data)\n      break\n    case SearchConst.SEARCH_GET_TRACKS:\n      store.dispatch(searchActions.storeSearchResults(data))\n      break\n    case VoteConst.VOTE_CASTED:\n      if (data) {\n        store.dispatch(actions.syncSocialData(data))\n      }\n      break\n    case MopidyApi.EVENT_PLAYBACK_STATE_RESUMED:\n      progressTimer.set(data)\n      break\n    case MopidyApi.VALIDATION_ERROR:\n      Notify.warning({\n        title: 'Oops',\n        message: data.message\n      })\n      break\n    default:\n      break\n  }\n}\n\nexport default onMessageHandler\n","import * as actions from 'actions'\n\nconst State = {\n  loadInitial: store => {\n    ;['getCurrentTrack', 'getState', 'getTrackList', 'getVolume', 'getTimePosition'].forEach(\n      action => {\n        store.dispatch(actions[action]())\n      }\n    )\n  }\n}\n\nexport default State\n","import io, { Socket } from 'socket.io-client'\nimport * as actions from 'actions'\nimport Constants from 'constants/common'\nimport VoteConstant from 'votes/constants'\nimport SearchConst from 'search/constants'\nimport { trackProgressTimer } from 'utils/time'\nimport onMessageHandler from 'utils/on-message-handler'\nimport Payload from 'utils/payload'\nimport State from 'utils/state'\nimport { Middleware, MiddlewareAPI, Action } from 'redux'\nimport { Dispatch } from 'react'\n\ninterface ActionInterface extends Action {\n  key: string\n  params: any\n}\n\nconst JukeboxMiddleware: Middleware = (() => {\n  const url = `http://${process.env.REACT_APP_WS_URL}:${process.env.REACT_APP_WS_PORT}`\n  let socket: Socket\n  let progressTimer: any = null\n\n  return (store: MiddlewareAPI) => (next: Dispatch<any>) => (action: ActionInterface) => {\n    const getJWT = (): string => store.getState().settings.token\n    const packMessage = () =>\n      Payload.encodeToJson({\n        jwt: getJWT(),\n        key: action.key,\n        data: action.params\n      })\n\n    const onMopidyStateChange = (data: string) => {\n      if (JSON.parse(data).online) {\n        store.dispatch(actions.mopidyConnected())\n        return State.loadInitial(store)\n      }\n      store.dispatch(actions.mopidyDisconnected())\n    }\n    const onOpen = () => {\n      progressTimer = trackProgressTimer(store, actions)\n      store.dispatch(actions.wsConnected())\n    }\n    const onClose = () => store.dispatch(actions.wsDisconnect())\n    const onMessage = (data: string) => onMessageHandler(store, data, progressTimer)\n    const onSearchResults = (data: string) => onMessageHandler(store, data, progressTimer)\n    const onVote = (data: string) => onMessageHandler(store, data, progressTimer)\n    const onConnect = () => {\n      if (socket != null) socket.close()\n      socket = io(url, { transports: ['websocket'] })\n      socket.on('vote', onVote)\n      socket.on('search', onSearchResults)\n      socket.on('mopidy', onMopidyStateChange)\n      socket.on('message', onMessage)\n      socket.on('connect', onOpen)\n      socket.on('disconnect', onClose)\n\n      store.dispatch(actions.wsConnecting())\n    }\n    const onDisconnect = () => {\n      if (progressTimer) {\n        progressTimer.reset()\n      }\n      store.dispatch(actions.wsDisconnected())\n    }\n\n    switch (action.type) {\n      case Constants.CONNECT:\n        return onConnect()\n      case Constants.DISCONNECT:\n        return onDisconnect()\n      case Constants.SEND:\n        return socket && socket.emit('message', packMessage())\n      case SearchConst.SEARCH:\n        return socket && socket.emit('search', packMessage())\n      case VoteConstant.VOTE:\n        return socket && socket.emit('vote', packMessage())\n      default:\n        return next(action)\n    }\n  }\n})()\n\nexport default JukeboxMiddleware\n","import Types from 'constants/common'\n\nconst track = (state = null, action) => {\n  switch (action.type) {\n    case Types.ADD_CURRENT_TRACK:\n      return action.track\n    case Types.SYNC_SOCIAL_DATA:\n      return Object.assign({}, state, {\n        addedBy: action.track.addedBy,\n        metrics: action.track.metrics\n      })\n    default:\n      return state\n  }\n}\n\nexport default track\n","import Types from 'constants/common'\n\nconst tracklist = (state = [], action) => {\n  switch (action.type) {\n    case Types.ADD_TRACKS:\n      return action.tracks\n    case Types.SYNC_SOCIAL_DATA:\n      return state.map(track => {\n        if (track.uri === action.track.uri) {\n          return Object.assign({}, track, {\n            addedBy: action.track.addedBy,\n            metrics: action.track.metrics\n          })\n        }\n\n        return track\n      })\n    default:\n      return state\n  }\n}\n\nexport default tracklist\n","import Types from 'constants/common'\n\nconst initalProgressState = {\n  position: 0,\n  duration: 0,\n  remaining: 0\n}\n\nconst timer = (state = initalProgressState, action) => {\n  switch (action.type) {\n    case Types.UPDATE_PROGRESS_TIMER:\n      return {\n        position: action.position,\n        duration: action.duration,\n        remaining: action.duration - action.position\n      }\n    default:\n      return state\n  }\n}\n\nexport default timer\n","import MopidyApi from 'constants/mopidy-api'\nimport Types from 'constants/common'\n\nconst initalState = {\n  online: false,\n  mopidyOnline: false,\n  volume: 0,\n  playbackState: MopidyApi.STOPPED\n}\n\nconst jukebox = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.CONNECTED:\n      return Object.assign({}, state, {\n        online: true\n      })\n    case Types.DISCONNECTED:\n      return Object.assign({}, state, {\n        online: false\n      })\n    case Types.MOPIDY_CONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: true\n      })\n    case Types.MOPIDY_DISCONNECTED:\n      return Object.assign({}, state, {\n        mopidyOnline: false\n      })\n    case Types.UPDATE_VOLUME:\n      return Object.assign({}, state, {\n        volume: action.volume\n      })\n    case Types.UPDATE_PLAYBACK_STATE:\n      return Object.assign({}, state, {\n        playbackState: action.state\n      })\n    default:\n      return state\n  }\n}\n\nexport default jukebox\n","import Types from 'constants/common'\n\nconst initalState = {\n  tokenExpires: 0,\n  token: null\n}\n\nconst settings = (state = initalState, action) => {\n  switch (action.type) {\n    case Types.STORE_TOKEN:\n      if (action.token === state.token) return state\n      return Object.assign({}, state, {\n        token: action.token,\n        tokenExpires: action.tokenExpires\n      })\n    case Types.CLEAR_STORE_TOKEN:\n      return initalState\n    default:\n      return state\n  }\n}\n\nexport default settings\n","import { Reducer } from 'redux'\nimport Constant from 'search/constants'\n\nexport type SearchState = Readonly<{\n  searchSideBarOpen: boolean\n  query: string\n  limit: number\n  offset: number\n  total: number\n  results: ReadonlyArray<any>\n}>\n\nconst initalState: SearchState = {\n  searchSideBarOpen: false,\n  query: '',\n  limit: 20,\n  offset: 0,\n  total: 0,\n  results: []\n}\n\nconst search: Reducer<SearchState> = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.REMOVE_FROM_SEARCH_RESULTS: {\n      return {\n        ...state,\n        results: state.results.filter(track => {\n          return !action.uris.includes(track.uri)\n        })\n      }\n    }\n    case Constant.TOGGLE_SEARCH_SIDEBAR: {\n      return Object.assign({}, state, {\n        searchSideBarOpen: action.open\n      })\n    }\n    case Constant.STORE_SEARCH_QUERY: {\n      return Object.assign({}, state, {\n        query: action.query\n      })\n    }\n    case Constant.STORE_SEARCH_RESULTS: {\n      return Object.assign({}, state, {\n        limit: action.results.limit,\n        offset: action.results.offset,\n        total: action.results.total > 10000 ? 10000 : action.results.total,\n        results: action.results.tracks\n      })\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default search\n","import { Reducer } from 'redux'\nimport Constant from 'search/constants'\n\nexport type CurateState = Readonly<{\n  tracks: any[]\n}>\n\nconst initalState: CurateState = {\n  tracks: []\n}\n\nconst curate: Reducer<CurateState> = (state = initalState, action) => {\n  switch (action.type) {\n    case Constant.ADD_TRACK_TO_MIX: {\n      const exists = state.tracks.find(track => track.uri === action.track.uri)\n      if (!exists) state.tracks.push(action.track)\n\n      return state\n    }\n    case Constant.REMOVE_TRACK_FROM_MIX: {\n      return {\n        ...state,\n        tracks: state.tracks.filter(track => track.uri !== action.uri)\n      }\n    }\n    case Constant.SWAP_TRACKS: {\n      const list = state.tracks\n      list[action.a] = list.splice(action.b, 1, list[action.a])[0]\n\n      return {\n        ...state,\n        tracks: list\n      }\n    }\n    case Constant.CLEAR_MIX: {\n      return {\n        ...state,\n        tracks: []\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default curate\n","import { combineReducers } from 'redux'\nimport track from 'reducers/track'\nimport tracklist from 'reducers/tracklist'\nimport timer from 'reducers/timer'\nimport jukebox from 'reducers/jukebox'\nimport settings from 'reducers/settings'\nimport search from 'search/reducers/search'\nimport curatedList from 'search/reducers/curated-list'\n\nconst jukeboxApp = combineReducers({\n  track,\n  tracklist,\n  timer,\n  jukebox,\n  settings,\n  search,\n  curatedList\n})\n\nexport default jukeboxApp\n","import React from 'react'\n\nconst getBrowserVisibilityProp = (): string => {\n  if (typeof (document as any).msHidden !== 'undefined') {\n    return 'msvisibilitychange'\n  } else if (typeof (document as any).webkitHidden !== 'undefined') {\n    return 'webkitvisibilitychange'\n  } else {\n    return 'visibilitychange'\n  }\n}\n\nconst getBrowserDocumentHiddenProp = (): string => {\n  if (typeof (document as any).msHidden !== 'undefined') {\n    return 'msHidden'\n  } else if (typeof (document as any).webkitHidden !== 'undefined') {\n    return 'webkitHidden'\n  } else {\n    return 'hidden'\n  }\n}\n\nconst getIsDocumentHidden = (): boolean => {\n  return !(document as any)[getBrowserDocumentHiddenProp()]\n}\n\nexport default function usePageVisibility(): boolean {\n  const [isVisible, setIsVisible] = React.useState(getIsDocumentHidden())\n  /* istanbul ignore next */\n  const onVisibilityChange = () => setIsVisible(getIsDocumentHidden())\n\n  React.useEffect(() => {\n    const visibilityChange = getBrowserVisibilityProp()\n\n    document.addEventListener(visibilityChange, onVisibilityChange, false)\n\n    return () => {\n      document.removeEventListener(visibilityChange, onVisibilityChange)\n    }\n  })\n\n  return isVisible\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst PreviousButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-previous-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Prev</Button.Content>\n    <Button.Content visible>\n      <Icon name='step backward' />\n    </Button.Content>\n  </Button>\n)\n\nconst NextButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    className='jb-next-button'\n    disabled={props.disabled}\n  >\n    <Button.Content hidden>Next</Button.Content>\n    <Button.Content visible>\n      <Icon name='step forward' />\n    </Button.Content>\n  </Button>\n)\n\nconst SkipButtons = ({ disabled, onPrevious, onNext }) => (\n  <>\n    <PreviousButton onClick={onPrevious} disabled={disabled} />\n    <NextButton onClick={onNext} disabled={disabled} />\n  </>\n)\n\nSkipButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default SkipButtons\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport SkipButtons from 'components/skip-buttons'\nimport MopidyApi from 'constants/mopidy-api'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst PlayButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={props.state === MopidyApi.PLAYING || props.disabled}\n    active={props.state === MopidyApi.PLAYING}\n    className='jb-play-button'\n  >\n    <Button.Content hidden>Play</Button.Content>\n    <Button.Content visible>\n      <Icon name='play' />\n    </Button.Content>\n  </Button>\n)\n\nconst PauseButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={\n      props.state === MopidyApi.PAUSED || props.state === MopidyApi.STOPPED || props.disabled\n    }\n    active={props.state === MopidyApi.PAUSED}\n    className='jb-pause-button'\n  >\n    <Button.Content hidden>Pause</Button.Content>\n    <Button.Content visible>\n      <Icon name='pause' />\n    </Button.Content>\n  </Button>\n)\n\nconst StopButton = props => (\n  <Button\n    onClick={props.onClick}\n    animated='vertical'\n    disabled={props.state === MopidyApi.STOPPED || props.disabled}\n    active={props.state === MopidyApi.STOPPED}\n    className='jb-stop-button'\n  >\n    <Button.Content hidden>Stop</Button.Content>\n    <Button.Content visible>\n      <Icon name='stop' />\n    </Button.Content>\n  </Button>\n)\n\nconst Controls = props => {\n  const jukebox = useSelector(state => state.jukebox)\n  const { disabled, onPlay, onPause, onStop, onPrevious, onNext } = props\n\n  return (\n    <span>\n      <SkipButtons disabled={disabled} onPrevious={onPrevious} onNext={onNext} />\n      <PlayButton onClick={onPlay} state={jukebox.playbackState} disabled={disabled} />\n      <PauseButton onClick={onPause} state={jukebox.playbackState} disabled={disabled} />\n      <StopButton onClick={onStop} state={jukebox.playbackState} disabled={disabled} />\n    </span>\n  )\n}\n\nControls.propTypes = {\n  disabled: PropTypes.bool,\n  onPlay: PropTypes.func.isRequired,\n  onPause: PropTypes.func.isRequired,\n  onStop: PropTypes.func.isRequired,\n  onPrevious: PropTypes.func.isRequired,\n  onNext: PropTypes.func.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DropTarget } from 'react-dnd'\nimport './index.css'\n\nconst boxTarget = {\n  drop(props, monitor) {\n    if (props.onDrop) {\n      props.onDrop(props, monitor)\n    }\n  }\n}\n\nconst boxHandler = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver()\n  }\n}\n\nconst dropTrack = show => {\n  if (!show) return null\n  return (\n    <div className='drag-is-over'>\n      <p>Drop da track</p>\n    </div>\n  )\n}\n\nclass UrlDropArea extends Component {\n  render() {\n    const { connectDropTarget, isOver } = this.props\n\n    return connectDropTarget(\n      <div>\n        {dropTrack(isOver)}\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nUrlDropArea.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  accepts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onDrop: PropTypes.func\n}\n\nexport default DropTarget(props => props.accepts, boxTarget, boxHandler)(UrlDropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContextProvider } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport Constants from 'constants/common'\nimport UrlDropArea from 'components/url-drop-area'\n\nconst DragInTrack = ({ disabled, onDrop, children }) => {\n  if (disabled) {\n    return children\n  }\n\n  return (\n    <DragDropContextProvider backend={HTML5Backend}>\n      <UrlDropArea accepts={Constants.DROP_TYPES} onDrop={onDrop}>\n        {children}\n      </UrlDropArea>\n    </DragDropContextProvider>\n  )\n}\n\nDragInTrack.propTypes = {\n  disabled: PropTypes.bool,\n  onDrop: PropTypes.func.isRequired\n}\n\nexport default DragInTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { List, Popup, Icon, Image } from 'semantic-ui-react'\nimport dateFormat from 'dateformat'\nimport './index.css'\n\nconst addedByContent = users => (\n  <List className='added-by-list'>\n    {users.map((data, i) => {\n      const fullName = data.user ? data.user.fullname : 'User unknown'\n\n      return (\n        <List.Item key={i}>\n          {userPicture(data)}\n          <List.Content>\n            <List.Description>\n              <strong>{dateFormat(data.addedAt, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName}\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      )\n    })}\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture)\n    return <Image avatar className='added_by_avatar_image' src={data.user.picture} />\n  return <Icon name='user' />\n}\n\nconst AddedBy = ({ users = [] }) => {\n  const avatar = userPicture(users[0])\n  if (!users.length) return avatar\n\n  return <Popup wide content={addedByContent(users)} trigger={avatar} />\n}\n\nAddedBy.propTypes = {\n  users: PropTypes.array\n}\n\nexport default AddedBy\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport dateFormat from 'dateformat'\nimport { List, Popup, Image, Label } from 'semantic-ui-react'\nimport './index.css'\n\nconst voteNormaliser = v => Math.round(v / 10 - 5) // 100 is max a user can vote per play\n\nconst votedByContent = props => (\n  <List>\n    {props.votes.map((data, i) => {\n      const fullName = data.user ? data.user.fullname : 'User unknown'\n      const voteScore = (\n        <Label circular size='mini'>\n          {voteNormaliser(data.vote)}\n        </Label>\n      )\n\n      return (\n        <List.Item key={i}>\n          {userPicture(data)}\n          <List.Content>\n            <List.Description>\n              <strong>{dateFormat(data.at, 'dd mmm yyyy @ h:MM tt')}</strong> - {fullName}{' '}\n              {voteScore}\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      )\n    })}\n  </List>\n)\n\nconst userPicture = data => {\n  if (data && data.user && data.user.picture)\n    return <Image avatar className='voted_by_avatar_image' src={data.user.picture} />\n  return null\n}\n\nconst voteLabel = props => {\n  let basic = true\n  let color = 'grey'\n  let icon = 'thumbs up'\n  const normalisedTotal = voteNormaliser(props.total)\n\n  if (normalisedTotal < 0) icon = 'thumbs down'\n  if (normalisedTotal > 4) {\n    color = 'green'\n    basic = false\n  }\n  if (normalisedTotal < -4) {\n    color = 'red'\n    basic = false\n  }\n\n  return (\n    <Label\n      className='track-label vote-track-label'\n      size={props.size || 'tiny'}\n      color={color}\n      basic={basic}\n      icon={icon}\n      content={normalisedTotal}\n      ribbon={props.ribbon ? 'right' : null}\n    />\n  )\n}\n\nconst VotedBy = props => {\n  const voteCount = props.votes ? props.votes.length : 0\n  if (!props.show) return null\n  if (voteCount < 1) return voteLabel(props)\n\n  return <Popup wide='very' content={votedByContent(props)} trigger={voteLabel(props)} />\n}\n\nVotedBy.propTypes = {\n  show: PropTypes.bool,\n  ribbon: PropTypes.bool,\n  votes: PropTypes.array,\n  total: PropTypes.number,\n  size: PropTypes.string\n}\n\nexport default VotedBy\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Line } from 'rc-progress'\nimport { timerToPercentage, millisToMinutesAndSeconds } from 'utils/time'\n\nconst ProgressBar = () => {\n  const timer = useSelector(state => state.timer)\n  const track = useSelector(state => state.track)\n  const progressPercentage = timerToPercentage(timer)\n\n  return (\n    <div className='progress-container'>\n      <span className='remaining-text'>{millisToMinutesAndSeconds(timer.remaining)}</span>\n      <span className='track-length'>{millisToMinutesAndSeconds(track.length)}</span>\n      <Line percent={progressPercentage} />\n    </div>\n  )\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Image, Label, Icon } from 'semantic-ui-react'\nimport Slider from 'rc-slider'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport ProgressBar from 'components/progress-bar'\nimport defaultImage from './default-artwork.png'\nimport { flatten, mean } from 'lodash'\nimport 'rc-slider/assets/index.css'\nimport './index.css'\n\nconst marks = {\n  0: {\n    style: {\n      color: 'red'\n    },\n    label: <Icon name='thumbs down' color='red' />\n  },\n  50: <Icon name='handshake' />,\n  100: {\n    style: {\n      color: 'green'\n    },\n    label: <Icon name='thumbs up' color='green' />\n  }\n}\n\nconst spotifyLink = uri => {\n  const code = uri.split(':').pop()\n  return `https://open.spotify.com/track/${code}`\n}\n\nconst AlbumDescription = props => {\n  const year = ` (${props.album.year})`\n  return (\n    <Card.Description>\n      {props.album.name}\n      {year}\n    </Card.Description>\n  )\n}\n\nconst noTrack = () => (\n  <Card>\n    <Image src={defaultImage} />\n    <Card.Content>\n      <Card.Header>Nothing playing</Card.Header>\n      <Card.Description>Drag some music here or press play.</Card.Description>\n    </Card.Content>\n  </Card>\n)\n\nconst calcVoteAverage = data => {\n  const votes = data.map(i => i.vote)\n  if (votes.length < 1) return 0\n  return mean(flatten(votes))\n}\n\nconst voteHandleColor = total => {\n  if (total > 50) return '#21ba45'\n  if (total < 50) return 'red'\n  return 'gray'\n}\n\nconst TrackVotes = props => {\n  if (!props.metrics) return null\n  return <VotedBy total={props.metrics.votesAverage} show={props.metrics.votes > 0} ribbon />\n}\n\nconst AddLabel = props => {\n  return (\n    <Label size='mini'>\n      Added\n      <Label.Detail>{props.count}</Label.Detail>\n    </Label>\n  )\n}\n\nconst PlayLabel = props => {\n  if (!props.metrics) return null\n\n  return (\n    <Label size='mini'>\n      Played\n      <Label.Detail>{props.metrics.plays}</Label.Detail>\n    </Label>\n  )\n}\n\nconst VoteLabel = props => {\n  if (!props.metrics) return null\n\n  return (\n    <Label size='mini'>\n      Activity\n      <Label.Detail>{props.metrics.votes}</Label.Detail>\n    </Label>\n  )\n}\n\nconst CurrentTrack = props => {\n  const { track, onVote, userID } = props\n  if (!track) {\n    return noTrack()\n  }\n  const maxRating = 10\n  const { addedBy = [] } = track\n  const votes = (addedBy[0] && addedBy[0].votes) || []\n  const currentUserVoter = votes.find(u => u.user._id === userID)\n  const currentUserVote = currentUserVoter ? currentUserVoter.vote : null\n  const doVote = uri => rating => onVote(uri, rating / maxRating)\n\n  return (\n    <Card>\n      <Image src={track.image || defaultImage} label={<TrackVotes metrics={track.metrics} />} />\n      <Card.Content>\n        <ProgressBar />\n        <Card.Header>{track.name}</Card.Header>\n        <Card.Meta>{track.artist.name}</Card.Meta>\n        <AlbumDescription album={track.album} />\n      </Card.Content>\n      <Card.Content extra>\n        <div className='track-rating-container'>\n          <Slider\n            disabled={!userID}\n            dots\n            value={currentUserVote}\n            included={false}\n            marks={marks}\n            step={maxRating}\n            onChange={doVote(track.uri)}\n            handleStyle={{\n              borderColor: voteHandleColor(currentUserVote),\n              backgroundColor: voteHandleColor(currentUserVote)\n            }}\n          />\n        </div>\n      </Card.Content>\n      <Card.Content extra>\n        <AddLabel count={addedBy.length} />\n        <PlayLabel metrics={track.metrics} />\n        <VoteLabel metrics={track.metrics} />\n        <VotedBy size='mini' show={votes.length > 0} total={calcVoteAverage(votes)} votes={votes} />\n      </Card.Content>\n      <Card.Content extra>\n        <AddedBy users={track.addedBy} />\n        <a\n          className='track-uri'\n          href={spotifyLink(track.uri)}\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          {track.uri}\n        </a>\n      </Card.Content>\n    </Card>\n  )\n}\n\nCurrentTrack.propTypes = {\n  userID: PropTypes.string,\n  track: PropTypes.object,\n  onVote: PropTypes.func\n}\n\nexport default CurrentTrack\n","import React, { useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport GoogleAuthContext from 'contexts/google'\nimport * as voteActions from 'votes/actions'\nimport CurrentTrack from 'components/current-track'\n\nexport const CurrentTrackContainer = () => {\n  const { googleUser } = useContext(GoogleAuthContext)\n  const track = useSelector(state => state.track)\n  const dispatch = useDispatch()\n\n  return (\n    <CurrentTrack\n      userID={googleUser && googleUser.googleId}\n      track={track}\n      onVote={(uri, rating) => dispatch(voteActions.vote(uri, rating))}\n    />\n  )\n}\n\nexport default CurrentTrackContainer\n","import Vote from 'votes/constants'\n\nexport const vote = (uri, vote) => {\n  return {\n    type: Vote.VOTE,\n    key: Vote.CAST_VOTE,\n    params: { uri, vote }\n  }\n}\n","import React, { useContext } from 'react'\nimport { Button, Image } from 'semantic-ui-react'\nimport GoogleAuthContext from 'contexts/google'\nimport './index.css'\n\nexport const Settings = () => {\n  const { googleUser, grantOfflineAccess, signOut } = useContext(GoogleAuthContext)\n\n  let avatar = (\n    <Button\n      icon='power off'\n      floated='right'\n      onClick={() => grantOfflineAccess()}\n      className='jb-settings-toggle'\n      title='Login using Google'\n    />\n  )\n  if (googleUser && googleUser.profileObj) {\n    avatar = (\n      <Image\n        rounded\n        size='mini'\n        floated='right'\n        title={googleUser.profileObj.name}\n        src={googleUser.profileObj.imageUrl}\n        onClick={() => signOut()}\n      />\n    )\n  }\n\n  return <React.Fragment>{avatar}</React.Fragment>\n}\n\nexport default Settings\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Comment, Confirm } from 'semantic-ui-react'\n\nconst RemoveTrack = props => {\n  const [open, setOpen] = React.useState(false)\n  const confirm = ev => {\n    props.onClick(ev)\n    setOpen(false)\n  }\n  const cancel = () => setOpen(false)\n  const show = () => setOpen(true)\n\n  return (\n    <>\n      <Comment.Action className='remove-track' onClick={show}>\n        Remove\n      </Comment.Action>\n      <Confirm\n        content={`Are you sure you want to remove: ${props.name}`}\n        cancelButton='No thanks'\n        confirmButton='Do it!'\n        open={open}\n        onCancel={cancel}\n        onConfirm={confirm}\n      />\n    </>\n  )\n}\n\nRemoveTrack.propTypes = {\n  uri: PropTypes.string,\n  name: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default RemoveTrack\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Comment, Label, Item } from 'semantic-ui-react'\nimport { millisToMinutesAndSeconds } from 'utils/time'\nimport defaultImage from 'components/current-track/default-artwork.png'\nimport AddedBy from 'components/added-by'\nimport VotedBy from 'components/voted-by'\nimport RemoveTrack from 'components/remove-track'\nimport './index.css'\n\nconst TrackImage = props => (\n  <Comment.Avatar className={props.isCurrent ? 'current-image' : null} src={props.src} />\n)\n\nconst ImageChooser = props => {\n  const image = props.image ? props.image : defaultImage\n\n  return <TrackImage src={image} isCurrent={props.isCurrent} />\n}\n\nconst TrackHeading = props => <Comment.Author>{props.name}</Comment.Author>\n\nconst TrackDescription = props => (\n  <Comment.Text>\n    <Item as='a' className='track-search-link' onClick={props.onClick}>\n      {props.artistName}\n    </Item>{' '}\n    <small>({millisToMinutesAndSeconds(props.trackLength)})</small>\n  </Comment.Text>\n)\n\nconst CurrentVote = props => {\n  if (!props.metrics) return null\n  const show = props.metrics.votes > 0\n  if (!show) return null\n\n  return (\n    <Comment.Action as='span'>\n      <VotedBy total={props.metrics.votesAverage} show={show} />\n    </Comment.Action>\n  )\n}\n\nconst ActionRemove = props => {\n  if (props.isCurrent || props.disabled) return null\n  const removeTrack = (uri, cb) => () => cb(uri)\n\n  return (\n    <RemoveTrack\n      uri={props.uri}\n      name={props.name}\n      onClick={removeTrack(props.uri, props.onClick)}\n    />\n  )\n}\n\nconst CurrentPlays = props => {\n  let basic = true\n  let color = 'grey'\n  if (!props.metrics) return null\n  if (props.metrics.plays > 0) {\n    basic = false\n    color = null\n  }\n\n  return (\n    <Comment.Action as='span'>\n      <Label className='track-label' size='tiny' color={color} basic={basic}>\n        Played <Label.Detail>{props.metrics.plays}</Label.Detail>\n      </Label>\n    </Comment.Action>\n  )\n}\n\nconst ListItems = props => {\n  let beenPlayed = false\n  const isCurrentTrack = (current, uri) => current && current.uri === uri\n\n  return props.tracks.map((track, i) => {\n    const { addedBy } = track\n    const isCurrent = isCurrentTrack(props.current, track.uri)\n    if (isCurrent) beenPlayed = beenPlayed || true\n\n    return (\n      <Comment className={classnames({ 'current-track': isCurrent })} key={`${i}${track.uri}`}>\n        <ImageChooser image={track.image} isCurrent={isCurrent} />\n        <Comment.Content className={classnames({ 'track-info': !beenPlayed })}>\n          <TrackHeading name={track.name} />\n          <TrackDescription\n            artistName={track.artist.name}\n            trackLength={track.length}\n            onClick={props.onArtistSearch(track.artist.name)}\n          />\n          <Comment.Actions>\n            <CurrentVote metrics={track.metrics} />\n            <CurrentPlays metrics={track.metrics} />\n            <Comment.Action>\n              <AddedBy users={addedBy} />\n            </Comment.Action>\n            <ActionRemove\n              uri={track.uri}\n              name={track.name}\n              disabled={props.disabled}\n              isCurrent={isCurrent}\n              onClick={props.onRemove}\n            />\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    )\n  })\n}\n\nconst Tracklist = props => {\n  if (!props.tracks) {\n    return null\n  }\n\n  return (\n    <Comment.Group size='small'>\n      <ListItems\n        disabled={props.disabled}\n        tracks={props.tracks}\n        current={props.currentTrack}\n        onRemove={props.onRemoveTrack}\n        onArtistSearch={props.onArtistSearch}\n      />\n    </Comment.Group>\n  )\n}\n\nTracklist.propTypes = {\n  disabled: PropTypes.bool,\n  tracks: PropTypes.array,\n  currentTrack: PropTypes.object,\n  onRemoveTrack: PropTypes.func.isRequired,\n  onArtistSearch: PropTypes.func.isRequired\n}\n\nexport default Tracklist\n","import React from 'react'\nimport { Button, Icon } from 'semantic-ui-react'\n\ntype SearchButtonProps = {\n  disabled: boolean\n  onClick: () => void\n}\n\nconst SearchButton: React.FC<SearchButtonProps> = props => (\n  <Button animated='vertical' floated='right' onClick={props.onClick} disabled={props.disabled}>\n    <Button.Content hidden>Search</Button.Content>\n    <Button.Content visible>\n      <Icon name='search' />\n    </Button.Content>\n  </Button>\n)\n\nexport default SearchButton\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst VOLUME_INC = 5\nconst VOLUME_MAX = 100\nconst VOLUME_MIN = 0\n\nconst volumeUp = (volume, cb) => {\n  volume += VOLUME_INC\n  if (volume <= VOLUME_MAX) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst volumeDown = (volume, cb) => {\n  volume -= VOLUME_INC\n  if (volume >= VOLUME_MIN) {\n    return () => {\n      cb(volume)\n    }\n  }\n}\n\nconst VolumeDownButton = props => (\n  <Button\n    className='jb-volume-down'\n    onClick={volumeDown(props.volume, props.onChange)}\n    disabled={props.disabled}\n  >\n    <Icon name='volume down' />\n  </Button>\n)\n\nconst VolumeUpButton = props => (\n  <Button\n    className='jb-volume-up'\n    onClick={volumeUp(props.volume, props.onChange)}\n    disabled={props.disabled}\n  >\n    <Icon name='volume up' />\n  </Button>\n)\n\nconst VolumeButtons = ({ disabled, onVolumeChange }) => {\n  const jukebox = useSelector(state => state.jukebox)\n\n  return (\n    <Button.Group floated='right'>\n      <VolumeDownButton volume={jukebox.volume} onChange={onVolumeChange} disabled={disabled} />\n      <Button.Or text={jukebox.volume} />\n      <VolumeUpButton volume={jukebox.volume} onChange={onVolumeChange} disabled={disabled} />\n    </Button.Group>\n  )\n}\n\nVolumeButtons.propTypes = {\n  disabled: PropTypes.bool,\n  onVolumeChange: PropTypes.func.isRequired\n}\n\nexport default VolumeButtons\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Confirm, Label } from 'semantic-ui-react'\n\nconst ClearPlaylist = props => {\n  const [open, setOpen] = React.useState(false)\n  if (props.disabled) {\n    return null\n  }\n\n  const confirm = ev => {\n    props.onClear(ev)\n    setOpen(false)\n  }\n  const cancel = () => setOpen(false)\n  const show = () => setOpen(true)\n\n  return (\n    <>\n      <Label horizontal size='mini' as='a' color='red' onClick={show} className='jb-clear-button'>\n        CLEAR\n      </Label>\n      <Confirm\n        content='Are you sure you want to nuke the playlist?'\n        cancelButton='No thanks'\n        confirmButton='Do it!'\n        open={open}\n        onCancel={cancel}\n        onConfirm={confirm}\n      />\n    </>\n  )\n}\n\nClearPlaylist.propTypes = {\n  disabled: PropTypes.bool,\n  onClear: PropTypes.func.isRequired\n}\n\nexport default ClearPlaylist\n","import React from 'react'\nimport classnames from 'classnames'\nimport { List, Image } from 'semantic-ui-react'\nimport VotedBy from 'components/voted-by'\n\ntype SearchItemProps = {\n  className?: string\n  track: any\n  onAdd?: () => void\n  onClick?: () => void\n}\n\ntype VoteInfoProps = {\n  metrics: any\n}\n\nconst VoteInfo: React.FC<VoteInfoProps> = props => {\n  if (!props.metrics) return null\n  return <VotedBy size='mini' total={props.metrics.votesAverage} show={props.metrics.votes > 0} />\n}\n\nconst SearchItem: React.FC<SearchItemProps> = props => (\n  <div\n    className={classnames(props.className, 'search-list-item', { disabled: props.track.explicit })}\n  >\n    <Image\n      alt={props.track.name}\n      floated='left'\n      src={props.track.image}\n      size='tiny'\n      title={`Click to add - ${props.track.name} - ${props.track.artist.name}`}\n      className='search-list-item__image'\n      disabled={props.track.explicit}\n      onClick={props.track.explicit ? undefined : props.onClick}\n    />\n    <List.Content>\n      <div className='search-list-item__header'>\n        {props.track.name} - {props.track.artist.name}\n      </div>\n      <div className='search-list-item__content'>{props.track.album.name}</div>\n      <VoteInfo metrics={props.track.metrics} />\n      {props.onAdd ? (\n        <span onClick={props.onAdd} className='search-list-item__add'>\n          Add to mix\n        </span>\n      ) : null}\n    </List.Content>\n  </div>\n)\n\nexport default SearchItem\n","import React from 'react'\nimport classnames from 'classnames'\nimport SearchItem from '../search-item'\n\ntype DraggableSearchItemProps = {\n  i: number\n  track: any\n  action: (a: number, b: number) => void\n  onRemove: () => void\n}\n\nconst DraggableSearchItem: React.FC<DraggableSearchItemProps> = props => {\n  const { i } = props\n\n  const onDragStart = (ev: React.DragEvent, i: string): void => {\n    ev.dataTransfer && ev.dataTransfer.setData('text/plain', i)\n  }\n\n  const onDrop = (ev: React.DragEvent, a: string): void => {\n    const b = ev.dataTransfer && ev.dataTransfer.getData('text/plain')\n    if (b) props.action(parseInt(a, 10), parseInt(b, 10))\n  }\n\n  return (\n    <div\n      draggable\n      className={classnames('draggable', 'search-list-item-draggable')}\n      onDragStart={e => onDragStart(e, String(i))}\n      onDrop={e => onDrop(e, String(i))}\n      title='You can drag this to sort.'\n    >\n      <SearchItem key={props.track.uri} track={props.track} />\n      <span onClick={props.onRemove} className='search-list-item__remove'>\n        Remove\n      </span>\n    </div>\n  )\n}\n\nexport default DraggableSearchItem\n","import React from 'react'\nimport { Sidebar, Button, Form, List, Header, Divider, Pagination } from 'semantic-ui-react'\nimport SearchItem from '../search-item'\nimport DraggableSearchItem from '../draggable-search-item'\nimport './index.css'\n\ntype SearchItemsProps = {\n  tracks: ReadonlyArray<any>\n  onClick: (uri: string) => void\n  onAdd: (track: any) => void\n}\n\ntype MixItemsProps = {\n  tracks: ReadonlyArray<any>\n  onSwap: (a: number, b: number) => void\n  onRemove: (uri: string) => void\n}\n\ntype YourMixProps = {\n  tracks: ReadonlyArray<any>\n  onRemoveFromMix: (uri: string) => void\n  onSwapTracks: (a: number, b: number) => void\n  onAddTracks: (uris: string[]) => void\n}\n\ntype SearchProps = {\n  visible: boolean\n  onClose: () => void\n  results: ReadonlyArray<any>\n  curatedList: ReadonlyArray<any>\n  onSubmit: () => void\n  query: string\n  onSwapTracks: (a: number, b: number) => void\n  onRemoveFromMix: (uri: string) => void\n  onQueryChange: (evt: React.ChangeEvent<HTMLInputElement>) => void\n  onAddTrack: (uri: string) => void\n  onAddTracks: (uris: string[]) => void\n  onAddTrackToMix: (track: any) => void\n  totalPages: number\n  onPageChange: (_: any, data: any) => void\n}\n\nconst SearchItems: React.FC<SearchItemsProps> = props => (\n  <>\n    {props.tracks.map(track => (\n      <SearchItem\n        key={track.uri}\n        track={track}\n        onClick={() => props.onClick(track.uri)}\n        onAdd={() => props.onAdd(track)}\n      />\n    ))}\n  </>\n)\n\nconst MixItems: React.FC<MixItemsProps> = props => (\n  <>\n    {props.tracks.map((track, i) => (\n      <DraggableSearchItem\n        i={i}\n        key={i}\n        track={track}\n        onRemove={() => props.onRemove(track.uri)}\n        action={props.onSwap}\n      />\n    ))}\n  </>\n)\n\nconst YourMix: React.FC<YourMixProps> = props => {\n  if (props.tracks.length === 0) return null\n  const uris = props.tracks.map(track => track.uri)\n\n  return (\n    <>\n      <Divider horizontal>\n        <Header as='h4' inverted>\n          Your Mix\n        </Header>\n      </Divider>\n      <List divided inverted size='tiny'>\n        <MixItems\n          tracks={props.tracks}\n          onRemove={props.onRemoveFromMix}\n          onSwap={props.onSwapTracks}\n        />\n      </List>\n      <Button\n        fluid\n        onClick={() => props.onAddTracks(uris)}\n        className='search-list-item__add_to_mix'\n      >\n        Add mix to playlist\n      </Button>\n      <Divider horizontal />\n    </>\n  )\n}\n\nconst Search: React.FC<SearchProps> = props => {\n  const {\n    visible,\n    onClose,\n    results,\n    curatedList,\n    onSubmit,\n    query,\n    onSwapTracks,\n    onRemoveFromMix,\n    onQueryChange,\n    onAddTrack,\n    onAddTracks,\n    onAddTrackToMix,\n    totalPages,\n    onPageChange\n  } = props\n  const inputEl = React.useRef<HTMLInputElement>(null)\n\n  return (\n    <Sidebar.Pushable>\n      <Sidebar\n        animation='overlay'\n        icon='labeled'\n        inverted='true'\n        vertical='true'\n        visible={visible}\n        width='very wide'\n        direction='right'\n        className='sidebar-search'\n        onShow={/* istanbul ignore next */ () => inputEl.current && inputEl.current.focus()}\n      >\n        <YourMix\n          tracks={curatedList}\n          onSwapTracks={onSwapTracks}\n          onAddTracks={onAddTracks}\n          onRemoveFromMix={onRemoveFromMix}\n        />\n        <Form inverted onSubmit={onSubmit}>\n          <Form.Field>\n            <label>SEARCH</label>\n            <input\n              ref={inputEl}\n              aria-label='search-input'\n              placeholder='track, artist or album'\n              onChange={onQueryChange}\n              value={query}\n            />\n          </Form.Field>\n          <Button type='submit' fluid>\n            Find\n          </Button>\n        </Form>\n        <Divider horizontal>\n          <Header as='h4' inverted>\n            Results\n          </Header>\n        </Divider>\n        {totalPages > 0 && (\n          <Pagination\n            className='search-list-pagination'\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            pointing\n            secondary\n            totalPages={totalPages}\n            onPageChange={onPageChange}\n          />\n        )}\n        <List divided relaxed inverted size='tiny'>\n          <SearchItems tracks={results} onClick={onAddTrack} onAdd={onAddTrackToMix} />\n        </List>\n      </Sidebar>\n      <Sidebar.Pusher dimmed={visible} onClick={visible ? onClose : null}>\n        {props.children}\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as mopidyActions from 'actions'\nimport * as searchActions from 'search/actions'\nimport SearchSidebar from 'search/components/sidebar'\nimport { SearchState } from './reducers/search'\nimport { CurateState } from './reducers/curated-list'\n\ninterface RootState {\n  search: SearchState\n  curatedList: CurateState\n}\n\nconst selectSearch = (state: RootState) => state.search\nconst selectCuratedList = (state: RootState) => state.curatedList\n\nexport const SearchContainer: React.FC = props => {\n  const search = useSelector(selectSearch)\n  const curatedList = useSelector(selectCuratedList)\n  const dispatch = useDispatch()\n\n  const onAddTrack = (uri: string) => {\n    dispatch(searchActions.removeFromSearchResults([uri]))\n    dispatch(mopidyActions.addNewTrack(uri))\n  }\n\n  const onAddTracks = (uris: string[]) => {\n    dispatch(mopidyActions.addNewTracks(uris))\n    dispatch(searchActions.clearMix())\n  }\n\n  const onAddTrackToMix = (track: any) => {\n    if (curatedList.tracks.length < 5) {\n      dispatch(searchActions.removeFromSearchResults([track.uri]))\n      dispatch(searchActions.addTrackToMix(track))\n    }\n  }\n\n  const onRemoveFromMix = (uri: string) => {\n    dispatch(searchActions.removeFromMix(uri))\n    onSearch()\n  }\n\n  const onSwapTracks = (a: number, b: number) => {\n    dispatch(searchActions.swapTracks(a, b))\n  }\n\n  const onSearch = (params = { activePage: 1 }) => {\n    const searchOptions = {\n      offset: (params.activePage - 1) * search.limit,\n      limit: search.limit\n    }\n    dispatch(searchActions.search(search.query, searchOptions))\n  }\n\n  return (\n    <SearchSidebar\n      visible={search.searchSideBarOpen}\n      onClose={() => dispatch(searchActions.toggleSearchSidebar(false))}\n      onSubmit={() => onSearch()}\n      onSwapTracks={onSwapTracks}\n      onAddTrack={onAddTrack}\n      onAddTracks={onAddTracks}\n      onAddTrackToMix={onAddTrackToMix}\n      onRemoveFromMix={onRemoveFromMix}\n      onQueryChange={evt => dispatch(searchActions.storeSearchQuery(evt.target.value))}\n      onPageChange={(_, data) => onSearch(data)}\n      results={search.results}\n      curatedList={curatedList.tracks}\n      totalPages={Math.round(search.total / search.limit)}\n      query={search.query}\n    >\n      {props.children}\n    </SearchSidebar>\n  )\n}\n\nexport default SearchContainer\n","import React from 'react'\nimport { Dimmer, Divider, Grid, Header, Container } from 'semantic-ui-react'\nimport Controls from 'components/controls'\nimport DragInTrack from 'components/drag-in-track'\nimport CurrentTrackContainer from 'containers/current-track-container'\nimport Settings from 'components/settings'\nimport TrackList from 'components/tracklist'\nimport SearchButton from 'search/components/button'\nimport VolumeButtons from 'components/volume-buttons'\nimport ClearPlaylist from 'components/clear-playlist'\nimport SearchContainer from 'search'\nimport './index.css'\n\nconst Dashboard = props => {\n  const {\n    online,\n    disabled,\n    onPlay,\n    onStop,\n    onPause,\n    onNext,\n    onPrevious,\n    onVolumeChange,\n    onDrop,\n    onTracklistClear,\n    onSearchClick,\n    tracklist,\n    currentTrack,\n    onRemoveTrack,\n    onArtistSearch\n  } = props\n\n  return (\n    <Dimmer.Dimmable blurring dimmed={!online}>\n      <DragInTrack disabled={disabled} onDrop={onDrop}>\n        <SearchContainer>\n          <Container className='header-wrapper' fluid>\n            <Settings />\n            <VolumeButtons disabled={disabled} onVolumeChange={onVolumeChange} />\n            <SearchButton onClick={onSearchClick} disabled={disabled} />\n            <Controls\n              disabled={disabled}\n              onPlay={onPlay}\n              onStop={onStop}\n              onPause={onPause}\n              onNext={onNext}\n              onPrevious={onPrevious}\n            />\n          </Container>\n          <Divider />\n          <Container className='body-wrapper' fluid>\n            <Grid stackable columns={2} className='dashboard-grid'>\n              <Grid.Column width={4}>\n                <Header size='small'>Current Track</Header>\n                <CurrentTrackContainer />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Header size='small'>\n                  Playlist <ClearPlaylist disabled={disabled} onClear={onTracklistClear} />\n                </Header>\n                <TrackList\n                  disabled={disabled}\n                  tracks={tracklist}\n                  currentTrack={currentTrack}\n                  onRemoveTrack={onRemoveTrack}\n                  onArtistSearch={onArtistSearch}\n                />\n              </Grid.Column>\n            </Grid>\n          </Container>\n        </SearchContainer>\n      </DragInTrack>\n    </Dimmer.Dimmable>\n  )\n}\n\nexport default Dashboard\n","import React, { useCallback, useEffect, useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport usePageVisibility from 'hooks/usePageVisibility'\nimport { DragDropContext } from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport GoogleAuthContext from 'contexts/google'\nimport Notify from 'utils/notify'\nimport * as actions from 'actions'\nimport * as searchActions from 'search/actions'\nimport Dashboard from 'dashboard'\n\nexport const DashboardContainer = () => {\n  const isVisible = usePageVisibility()\n  const settings = useSelector(state => state.settings)\n  const jukebox = useSelector(state => state.jukebox)\n  const tracklist = useSelector(state => state.tracklist)\n  const currentTrack = useSelector(state => state.track)\n  const dispatch = useDispatch()\n  const { isSignedIn, googleUser, auth2 } = useContext(GoogleAuthContext)\n  const disable = !(isSignedIn && jukebox.mopidyOnline)\n\n  useEffect(() => {\n    dispatch(actions.wsConnect())\n\n    /* istanbul ignore next */\n    return () => dispatch(actions.wsDisconnect())\n  }, [dispatch])\n\n  if (isSignedIn && isVisible) {\n    const shouldRefreshToken = () => {\n      // The token is within 5 minutes of expiring\n      return settings.tokenExpires > 0 && settings.tokenExpires - 300 * 1000 - Date.now() <= 0\n    }\n\n    if (googleUser.expiresAt > settings.tokenExpires) {\n      dispatch(actions.updateToken(googleUser.tokenId, googleUser.expiresAt))\n    }\n\n    if (shouldRefreshToken()) {\n      auth2.currentUser\n        .get()\n        .reloadAuthResponse()\n        .then(\n          response => {\n            console.info('Token Refreshed (expires): ', response.expires_at)\n            dispatch(actions.updateToken(response.id_token, response.expires_at))\n          },\n          err => console.warn('Token un-refreshable: ', err.message)\n        )\n    }\n  }\n\n  if (!isSignedIn) dispatch(actions.clearToken())\n\n  const onPlay = useCallback(() => dispatch(actions.startPlaying()), [dispatch])\n  const onStop = useCallback(() => dispatch(actions.stopPlaying()), [dispatch])\n  const onPause = useCallback(() => dispatch(actions.pausePlaying()), [dispatch])\n  const onNext = useCallback(() => dispatch(actions.nextPlaying()), [dispatch])\n  const onPrevious = useCallback(() => dispatch(actions.previousPlaying()), [dispatch])\n  const onVolumeChange = useCallback(evt => dispatch(actions.setVolume(evt)), [dispatch])\n  /* istanbul ignore next */\n  const onDrop = useCallback(\n    (_item, monitor) => {\n      const urls = monitor\n        .getItem()\n        .urls[0].split('https://')\n        .map(url => {\n          return 'https://' + url\n        })\n        .slice(1)\n      if (monitor) {\n        if (urls.length <= 5) {\n          urls.forEach(url => {\n            dispatch(actions.addNewTrack(url))\n          })\n        } else {\n          Notify.warning({\n            title: 'Oops',\n            message: 'You can only add a maximum of 5 tracks at a time!'\n          })\n        }\n      }\n    },\n    [dispatch]\n  )\n  const onTracklistClear = useCallback(() => dispatch(actions.clearTrackList()), [dispatch])\n  const onSearchClick = useCallback(\n    () => dispatch(searchActions.toggleSearchSidebar(true)),\n    [dispatch]\n  )\n  const onRemoveTrack = useCallback(evt => dispatch(actions.removeFromTracklist(evt)), [dispatch])\n  const onArtistSearch = useCallback(\n    query => _ => {\n      const searchOptions = { offset: 0 }\n      dispatch(searchActions.search(query, searchOptions))\n      dispatch(searchActions.storeSearchQuery(query, searchOptions))\n      dispatch(searchActions.toggleSearchSidebar(true))\n    },\n    [dispatch]\n  )\n\n  return (\n    <Dashboard\n      online={jukebox.online}\n      disabled={disable}\n      onPlay={onPlay}\n      onStop={onStop}\n      onPause={onPause}\n      onNext={onNext}\n      onPrevious={onPrevious}\n      onVolumeChange={onVolumeChange}\n      onDrop={onDrop}\n      onTracklistClear={onTracklistClear}\n      onSearchClick={onSearchClick}\n      tracklist={tracklist}\n      currentTrack={currentTrack}\n      onRemoveTrack={onRemoveTrack}\n      onArtistSearch={onArtistSearch}\n    />\n  )\n}\n\nexport default DragDropContext(HTML5Backend)(DashboardContainer)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport ReactNotification from 'react-notifications-component'\nimport { useGoogleLogin } from 'react-use-googlelogin'\nimport ErrorBoundary from 'components/error-boundary'\nimport GoogleAuthContext from 'contexts/google'\nimport jukeboxMiddleware from 'middleware/jukebox-middleware'\nimport jukeboxApp from 'reducers'\nimport { Container } from 'semantic-ui-react'\nimport DashboardContainer from 'containers/dashboard-container'\nimport 'react-notifications-component/dist/theme.css'\n\nconst store = createStore(jukeboxApp, composeWithDevTools(applyMiddleware(jukeboxMiddleware)))\n\nconst App = () => {\n  const googleAuth = useGoogleLogin({\n    clientId: process.env.REACT_APP_CLIENT_ID as string,\n    hostedDomain: process.env.GOOGLE_AUTH_DOMAIN\n  })\n\n  return (\n    <Provider store={store}>\n      <ReactNotification />\n      <Container fluid>\n        <GoogleAuthContext.Provider value={googleAuth}>\n          <ErrorBoundary>\n            <DashboardContainer />\n          </ErrorBoundary>\n        </GoogleAuthContext.Provider>\n      </Container>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}