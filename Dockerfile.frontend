# Frontend Dockerfile for Kyan Jukebox (Static Build with Nginx)
# Build from project root: docker build -f Dockerfile.frontend -t jukebox-frontend .

# Build stage
FROM oven/bun:1.3-alpine AS build

# Build arguments for environment variables
ARG REACT_APP_WS_URL
ARG REACT_APP_WS_PORT

# Set environment variables for the build
ENV REACT_APP_WS_URL=$REACT_APP_WS_URL
ENV REACT_APP_WS_PORT=$REACT_APP_WS_PORT

WORKDIR /usr/src/app

# Copy workspace configuration
COPY package.json bun.lock ./
COPY frontend/package.json ./frontend/
COPY backend/package.json ./backend/

# Install dependencies with workspace structure
RUN bun install --frozen-lockfile

# Copy frontend source
COPY ./frontend ./frontend/

# Build the frontend static assets
WORKDIR /usr/src/app/frontend

# Build JavaScript/TypeScript with Bun
RUN rm -rf dist && mkdir -p dist && \
  bun build ./src/index.tsx --outdir=dist --target=browser --minify --sourcemap=external --splitting --format=esm --env 'REACT_APP_*' && \
  cp index.html dist/index.html && \
  chmod 644 dist/index.html && \
  if [ -d "public" ]; then cp -r public/* dist/; fi

# Production stage - nginx to serve static files
FROM nginx:1.25-alpine

# Copy nginx configuration
COPY --from=build /usr/src/app/frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Copy built static files from build stage
COPY --from=build /usr/src/app/frontend/dist /usr/share/nginx/html

# Remove default nginx config
RUN rm -f /etc/nginx/conf.d/default.conf.default

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Run nginx in foreground
CMD ["nginx", "-g", "daemon off;"]
